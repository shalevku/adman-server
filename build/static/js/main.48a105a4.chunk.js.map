{"version":3,"sources":["services/Data.service.js","ReactModels/User/UserForm.jsx","Managers/UserSession.jsx","ReactModels/Ad/AdForm.jsx","ReactModels/Ad/AdsTable.jsx","Carousel.jsx","Managers/Ad.manager.jsx","ReactModels/User/UsersTable.jsx","Managers/User.manager.jsx","App.jsx","index.js"],"names":["service","action","method","data","formData","FormData","key","append","axios","url","headers","UserForm","props","authUser","useContext","authContext","location","useLocation","console","log","name","pathname","params","useParams","userMask","id","email","password","update","destroy","create","login","Object","assign","useState","userErrors","setUserErrors","userErrorMsgs","setUserErrorMsgs","handleTextFieldChange","event","target","value","valid","validity","validationMessage","substring","indexOf","onChange","isDestroyWarningOpen","setIsDestroyWarningOpen","handleDestroyWarningClose","Container","component","sx","width","marginTop","onSubmit","preventDefault","URL","Stack","direction","spacing","alignItems","height","paddingTop","TextField","label","user","disabled","type","required","error","helperText","InputProps","autoComplete","inputProps","maxLength","justifyContent","Button","variant","color","onClick","marginLeft","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","onDestroy","autoFocus","UserSession","history","useHistory","auth","isSnackbarOpen","setIsSnackbarOpen","text","severity","sbAlert","setSbAlert","setUser","handleSubmitUser","userToSend","dataService","then","pastTenses","post","put","delete","handleSnackbarOpen","setTimeout","replace","catch","response","status","handleChange","handleSnackbarClose","reason","exact","path","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","UserAuthSwitch","selectedPage","setSelectedPage","useEffect","RadioGroup","push","row","FormControlLabel","control","Radio","GENDERS","BODY_PARTS","TYPES","AdForm","adMask","gender","bodyPart","title","description","isGiven","photo","files","checked","handleAcChange","newValue","adAcInputs","setAdAcInputs","overflowY","ad","Autocomplete","freeSolo","inputValue","onInputChange","newInputValue","options","renderInput","Checkbox","startIcon","accept","hidden","EnhancedTableHead","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","createSortHandler","header","TableHead","TableRow","TableCell","padding","indeterminate","map","align","isAlignRight","disablePadding","sortDirection","filterOn","rowFilter","size","TableSortLabel","active","_","startCase","Box","visuallyHidden","EnhancedTableToolbar","selectedIndices","length","divider","Divider","orientation","flexItem","pl","sm","pr","xs","bgcolor","theme","alpha","palette","primary","main","activatedOpacity","Typography","Switch","dense","onDenseChange","Tooltip","IconButton","onFilterOn","TablePagination","rowsPerPageOptions","rowsCount","count","rowsPerPage","page","onPageChange","onRowsPerPageChange","EnhancedTable","setSelectedIndices","setPage","setDense","setRowsPerPage","entries","initialElement","forEach","index","emptyRows","Math","max","rows","setOrder","setOrderBy","setFilterOn","filteredRows","setFilteredRows","fromEntries","setRowFilter","newFilteredRows","filter","keys","every","rfkey","toString","includes","Paper","mb","TableContainer","Table","minWidth","stickyHeader","newSelectedRowsIds","TableBody","slice","sort","ascendingComparator","r1","r2","getComparator","isItemSelected","checkboxLabelId","hover","newSelectedIndices","splice","handleRowClick","role","tabIndex","selected","Link","underline","RouterLink","to","omit","cellValue","photoName","src","UserId","alt","scope","style","colSpan","parseInt","newPage","Carousel","dots","infinite","speed","slidesToShow","slidesToScroll","element","AdManager","ads","setAds","initialAd","setAd","initialAdRef","useRef","isAdFormOpen","setAdFormOpen","handleSubmit","adToSend","prevAds","concat","statusText","current","handleDestroy","indices","pop","destroyAds","AdsTable","findIndex","scroll","PaperProps","fontSize","floor","random","round","AdSwitch","overflow","UserManager","users","setUsers","initialUser","initialUserRef","isUserFormOpen","setUserFormOpen","prevUsers","logout","destroyUsers","authUserIndex","UsersTable","React","createContext","AD_MANAGER_URLs","USER_MANAGER_URLs","PrivateRoute","children","state","from","App","setAuthUser","a","Provider","flexGrow","AppBar","position","Toolbar","edge","mr","test","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48a105a4.chunk.js","sourcesContent":["// explanation: this saves handling form data in each component who communicates with the server.\r\nimport axios from 'axios'\r\n\r\n// create and update (multipart/form-data)\r\nconst service = (action, method, data = {}) => {\r\n  var formData = new FormData()\r\n  if (data !== {}) {\r\n    for (let key in data) {\r\n      formData.append(key, data[key])\r\n    }\r\n  }\r\n  return axios({\r\n    url: action,\r\n    method,\r\n    headers: { 'content-type': 'multipart/form-data' },\r\n    data: formData\r\n  })\r\n}\r\n\r\nexport default service\r\n\r\n// TODO:\r\n// * do this: mdn idempotence: the first call of a DELETE will likely return a 200, while successive ones will likely return a 404.\r\n// * look for another word for a user that is claiming to be someone but not yet verified.\r\n","// One primary advantage is that on navigation to the same component, some controls don't need to re-render.\r\n// I decided to use the native form and submit button attributes, using a single handleSubmit event handler instead onclick events.\r\nimport React, { useContext, useState } from 'react'\r\nimport { useLocation, useParams } from 'react-router-dom'\r\nimport { Container, Stack, TextField, Button } from '@mui/material'\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions\r\n} from '@mui/material'\r\nimport { authContext } from '../../App'\r\n\r\n/**\r\n * <model>Form component represents a form whos action, method and filtered controls are decided according to the name prop.\r\n * @param {*} props name, user, onSubmit, onChange, onDestroy.\r\n * @summary\r\n * name: form to be rendered (with filtered fields and buttons).\r\n * user: user from parent.\r\n * onChange: sets value for special fields such as checkbox and file and then invokes props.onChange().\r\n * @returns \\<form> of existing or new user.\r\n */\r\nconst UserForm = props => {\r\n  const { authUser } = useContext(authContext)\r\n  const location = useLocation()\r\n  console.log(`${props.name}UserForm at ${location.pathname}.`)\r\n  const params = useParams()\r\n\r\n  //    Setting the action, method and userMask of the form.\r\n  let [action, method] = ['', '']\r\n  // A mask of boolean properties.\r\n  const userMask = {\r\n    id: false,\r\n    email: false,\r\n    password: false,\r\n    name: false,\r\n    update: false,\r\n    destroy: false,\r\n    create: false,\r\n    login: false\r\n  }\r\n  // Fields (properties) of the form that will be rendered.\r\n  switch (props.name) {\r\n    case 'existing':\r\n      ;[action, method] = [`/api/users/${params.id}`, 'put']\r\n      Object.assign(userMask, {\r\n        id: true,\r\n        email: true,\r\n        password: true,\r\n        name: true,\r\n        update: true,\r\n        destroy: true\r\n      })\r\n      break\r\n    case 'new':\r\n      ;[action, method] = [`/api/users`, 'post']\r\n      Object.assign(userMask, {\r\n        email: true,\r\n        password: true,\r\n        name: true,\r\n        create: true\r\n      })\r\n      break\r\n    case 'login':\r\n      ;[action, method] = [`/api/userSession`, 'post']\r\n      Object.assign(userMask, {\r\n        email: true,\r\n        password: true,\r\n        login: true\r\n      })\r\n      break\r\n    default:\r\n      break\r\n  }\r\n  // Hiding Actions from a guest.\r\n  if (!authUser) userMask.update = userMask.destroy = false\r\n\r\n  // Form validation errors handling.\r\n  const initialUserErrors = {\r\n    email: false,\r\n    password: false,\r\n    name: false\r\n  }\r\n  const [userErrors, setUserErrors] = useState(initialUserErrors)\r\n  const initialUserErrorMsgs = { email: '', password: '', name: '' }\r\n  const [userErrorMsgs, setUserErrorMsgs] = useState(initialUserErrorMsgs)\r\n\r\n  //    Default behaviors of the form.\r\n  const handleTextFieldChange = event => {\r\n    const target = event.target\r\n    const name = target.name\r\n    let value = target.value\r\n    let valid = target.validity.valid\r\n    let validationMessage = target.validationMessage\r\n    if (name === 'email') {\r\n      if (target.validity.valid) {\r\n        const dotAfterAtPos = value.substring(value.indexOf('@')).indexOf('.')\r\n        // A . after @ isn't present.\r\n        if (dotAfterAtPos === -1) {\r\n          valid = false\r\n          validationMessage = \"You're missing a . after the @\"\r\n        }\r\n      }\r\n    }\r\n    setUserErrors(userErrors => ({ ...userErrors, [name]: !valid }))\r\n    setUserErrorMsgs(userErrorMsgs => ({\r\n      ...userErrorMsgs,\r\n      [name]: validationMessage\r\n    }))\r\n    props.onChange(name, value)\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    const action = new URL(event.target.action).pathname\r\n    props.onSubmit(action, method) // and not event.target.method since only get and post values can be set.\r\n  }\r\n\r\n  // Warning before destroying a user.\r\n  const [isDestroyWarningOpen, setIsDestroyWarningOpen] = useState(false)\r\n\r\n  const handleDestroyWarningOpen = () => {\r\n    setIsDestroyWarningOpen(true)\r\n  }\r\n  const handleDestroyWarningClose = () => {\r\n    setIsDestroyWarningOpen(false)\r\n  }\r\n  const handleDestroy = () => {\r\n    setIsDestroyWarningOpen(false)\r\n    props.onDestroy()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        component=\"form\"\r\n        sx={{\r\n          width: '350px',\r\n          marginTop: '10px'\r\n        }}\r\n        name={props.name}\r\n        action={action}\r\n        method={method} // browser will swap it with get, but in handleSubmit I will change it back to method.\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Stack\r\n          direction=\"column\"\r\n          spacing={3}\r\n          alignItems=\"flex-start\"\r\n          height=\"300px\"\r\n          sx={{ paddingTop: '10px' }}\r\n        >\r\n          {userMask.id && (\r\n            <TextField\r\n              id=\"id\"\r\n              label=\"ID\"\r\n              name=\"id\"\r\n              value={props.user.id}\r\n              onChange={handleTextFieldChange}\r\n              disabled\r\n              sx={{ width: '10ch' }}\r\n            />\r\n          )}\r\n          {userMask.email && (\r\n            <TextField\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={props.user.email}\r\n              onChange={handleTextFieldChange}\r\n              required\r\n              error={userErrors.email}\r\n              {...(userErrors.email && {\r\n                helperText: userErrorMsgs.email\r\n              })}\r\n              InputProps={{ sx: { width: '200px' } }}\r\n            />\r\n          )}\r\n          {userMask.password && (\r\n            <TextField\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={props.user.password}\r\n              onChange={handleTextFieldChange}\r\n              required\r\n              error={userErrors.password}\r\n              {...(userErrors.password && {\r\n                helperText: userErrorMsgs.password\r\n              })}\r\n              autoComplete={\r\n                props.name === 'new' || props.name === 'existing'\r\n                  ? 'new-password'\r\n                  : 'current-password'\r\n              }\r\n              InputProps={{ sx: { width: '200px' } }}\r\n              inputProps={{ maxLength: 20 }}\r\n            />\r\n          )}\r\n          {userMask.name && (\r\n            <TextField\r\n              id=\"name\"\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              value={props.user.name}\r\n              onChange={handleTextFieldChange}\r\n              required\r\n              error={userErrors.name}\r\n              {...(userErrors.name && {\r\n                helperText: userErrorMsgs.name\r\n              })}\r\n            />\r\n          )}\r\n        </Stack>\r\n        <hr />\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n          {userMask.update && (\r\n            <Button type=\"submit\" variant=\"contained\">\r\n              Update\r\n            </Button>\r\n          )}\r\n          {userMask.destroy && (\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"warning\"\r\n              onClick={handleDestroyWarningOpen}\r\n              sx={{ marginLeft: '25px' }}\r\n            >\r\n              Destroy\r\n            </Button>\r\n          )}\r\n          {userMask.create && (\r\n            <Button type=\"submit\" variant=\"contained\">\r\n              Create\r\n            </Button>\r\n          )}\r\n          {userMask.login && (\r\n            <Button type=\"submit\" variant=\"contained\">\r\n              login\r\n            </Button>\r\n          )}\r\n        </Stack>\r\n      </Container>\r\n      <Dialog\r\n        open={isDestroyWarningOpen}\r\n        onClose={handleDestroyWarningClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          Destroy the user (and his ads)?\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            If you destroy this user, you will also destroy all of his ads, so\r\n            be careful!\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDestroyWarningClose}>Disagree</Button>\r\n          <Button color=\"warning\" onClick={handleDestroy} autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserForm\r\n","import { useState, useEffect, useContext } from 'react'\r\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  Snackbar,\r\n  Alert\r\n} from '@mui/material'\r\nimport { authContext } from '../App'\r\nimport dataService from '../services/Data.service'\r\nimport UserForm from '../ReactModels/User/UserForm'\r\n\r\nconst UserSession = props => {\r\n  //    React router hooks\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  console.log(`UserSession at ${location.pathname}.`)\r\n  //    Authentication context value\r\n  const auth = useContext(authContext)\r\n  // Feedback related\r\n  const [isSnackbarOpen, setIsSnackbarOpen] = useState(false)\r\n  const [sbAlert, setSbAlert] = useState({ text: '', severity: 'error' })\r\n\r\n  //    States\r\n  const initialUser = {\r\n    id: '',\r\n    email: 'shalevku@gmail.com',\r\n    password: 'asdf',\r\n    name: 'Shalev Kubi'\r\n  }\r\n  const [user, setUser] = useState(initialUser) // just for same user between createAccount and login.\r\n\r\n  //    Create and login\r\n  const handleSubmitUser = (action, method) => {\r\n    const userToSend = { ...user } // TODO: maybe delete and send directly? (like in components).\r\n\r\n    dataService(action, method, userToSend)\r\n      .then(({ data }) => {\r\n        // Alert that the action was performed successfully.\r\n        const pastTenses = {\r\n          post: action === '/api/users' ? 'Created' : 'Logged in',\r\n          put: 'Updated',\r\n          delete: 'Deleted'\r\n        }\r\n        console.log(`${user.name} was ${pastTenses[method]}!`)\r\n        switch (action) {\r\n          case '/api/users':\r\n            handleSnackbarOpen(\r\n              `User ${user.name} created! Redirecting to login page in 2 seconds...`,\r\n              'success'\r\n            )\r\n            setTimeout(() => {\r\n              history.replace(`/login`)\r\n            }, 2000)\r\n            break\r\n          case '/api/userSession':\r\n            auth.login(data)\r\n            break\r\n          default:\r\n            break\r\n        }\r\n      })\r\n      .catch(error =>\r\n        handleSnackbarOpen(\r\n          error.response.status === 500\r\n            ? 'The email is taken by someone else.'\r\n            : 'Email or password is incorrect',\r\n          'error'\r\n        )\r\n      )\r\n  }\r\n\r\n  //    Standard form change handler\r\n  const handleChange = (name, value) => {\r\n    setUser(user => ({ ...user, [name]: value }))\r\n  }\r\n\r\n  //    Feedback\r\n  function handleSnackbarOpen(text, severity) {\r\n    setIsSnackbarOpen(true)\r\n    setSbAlert({ text, severity })\r\n    console.log(`${severity}: ${text}`)\r\n  }\r\n  function handleSnackbarClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return\r\n    }\r\n    setIsSnackbarOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/login\">\r\n          <UserForm\r\n            name=\"login\"\r\n            user={user}\r\n            onSubmit={handleSubmitUser}\r\n            onChange={handleChange}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/createAccount\">\r\n          <UserForm\r\n            name=\"new\"\r\n            user={user}\r\n            onSubmit={handleSubmitUser}\r\n            onChange={handleChange}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n      {/* Feedback snackbar */}\r\n      <Snackbar\r\n        open={isSnackbarOpen}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <Alert\r\n          onClose={handleSnackbarClose}\r\n          severity={sbAlert.severity}\r\n          variant=\"filled\"\r\n        >\r\n          {sbAlert.text}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserSession\r\n\r\nexport const UserAuthSwitch = () => {\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n\r\n  // Radio Group\r\n  const [selectedPage, setSelectedPage] = useState('')\r\n\r\n  // Switch between login and createAccount user forms.\r\n  const handlePageChange = event => {\r\n    const selectedPage = event.target.value\r\n    // replace if login or newAccount, else push.\r\n    if (\r\n      location.pathname === '/login' ||\r\n      location.pathname === '/createAccount'\r\n    )\r\n      history.replace(selectedPage)\r\n    else history.push(selectedPage)\r\n  }\r\n  // On navigation, change selected radio.\r\n  useEffect(() => {\r\n    setSelectedPage(location.pathname)\r\n  }, [location.pathname])\r\n\r\n  return (\r\n    <div>\r\n      <RadioGroup\r\n        name=\"user-session-page-switcher\"\r\n        value={selectedPage} // from path.\r\n        onChange={handlePageChange}\r\n        row\r\n      >\r\n        <FormControlLabel value=\"/login\" control={<Radio />} label=\"Login\" />\r\n        <FormControlLabel\r\n          value=\"/createAccount\"\r\n          control={<Radio />}\r\n          label=\"Create Account\"\r\n        />\r\n      </RadioGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\n//      TODOS:\r\n//      Maybe:\r\n// * do the login request a get request that the server will check if the user has a session and if not\r\n// it will log him in if he exists or reject if not. (so its a get request with a body).\r\n// * Try the handler directly in the input property.\r\n// * Reset form input doesn't work, try it.\r\n","// One primary advantage is that on navigation to the same component, some controls don't need to re-render.\r\n// I decided to use the native form and submit button attributes, using a single handleSubmit event handler instead onclick events.\r\nimport React, { useContext, useState } from 'react'\r\nimport { useLocation, useParams } from 'react-router-dom'\r\nimport {\r\n  Container,\r\n  Stack,\r\n  TextField,\r\n  Button,\r\n  Autocomplete,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from '@mui/material'\r\nimport AddAPhotoIcon from '@mui/icons-material/AddAPhoto'\r\nimport { authContext } from '../../App'\r\n\r\nconst GENDERS = [\r\n  'Male',\r\n  'Female',\r\n  'Transgender',\r\n  'Gender neutral',\r\n  'Non-binary',\r\n  'Agender',\r\n  'Pangender',\r\n  'Genderqueer',\r\n  'Two-spirit',\r\n  'Third gender'\r\n]\r\nconst BODY_PARTS = [\r\n  'Torso and Legs',\r\n  'Head',\r\n  'Eyes',\r\n  'Ears',\r\n  'Neck',\r\n  'Torso',\r\n  'hands',\r\n  'Waist',\r\n  'Legs',\r\n  'Feet'\r\n]\r\nconst TYPES = [\r\n  'Sweater',\r\n  'Dress',\r\n  'Hoodies',\r\n  'T-shirt',\r\n  'Flip-flops',\r\n  'Shorts',\r\n  'Skirt',\r\n  'Jeans',\r\n  'Shoes',\r\n  'Coat',\r\n  'High heels',\r\n  'Suit',\r\n  'Cap',\r\n  'Socks',\r\n  'Shirt',\r\n  'Bra',\r\n  'Scarf',\r\n  'Swimsuit',\r\n  'Hat',\r\n  'Gloves',\r\n  'Jacket',\r\n  'Long coat',\r\n  'Boots',\r\n  'Sunglasses',\r\n  'Tie',\r\n  'Polo shirt',\r\n  'Leather jackets'\r\n]\r\n\r\n/**\r\n * <model>Form component represents a form whos action, method and filtered controls are decided according to the name prop.\r\n * @param {*} props name, ad, onSubmit, onChange, onDestroy.\r\n * @summary\r\n * name: form to be rendered (rendered with filtered fields and buttons).\r\n * ad: ad from parent.\r\n * onChange: sets value for special fields such as checkbox and file and then invokes props.onChange().\r\n * @returns \\<form> of existing or new ad.\r\n */\r\nconst AdForm = props => {\r\n  const { authUser } = useContext(authContext)\r\n  console.log(`${props.name}AdForm at ${useLocation().pathname}.`)\r\n  const params = useParams()\r\n\r\n  //    Setting the action, method and adMask of the form.\r\n  let [action, method] = ['', '']\r\n  // A mask of boolean properties.\r\n  const adMask = {\r\n    id: false,\r\n    gender: false,\r\n    bodyPart: false,\r\n    type: false,\r\n    title: false,\r\n    description: false,\r\n    isGiven: false,\r\n    photo: false,\r\n    update: false,\r\n    destroy: false,\r\n    create: false\r\n  }\r\n  // Fields (properties) of the form that will be rendered.\r\n  switch (props.name) {\r\n    case 'existing':\r\n      ;[action, method] = [`/api/ads/${params.id}`, 'put']\r\n      Object.assign(adMask, {\r\n        id: true,\r\n        gender: true,\r\n        bodyPart: true,\r\n        type: true,\r\n        title: true,\r\n        description: true,\r\n        isGiven: true,\r\n        photo: true,\r\n        update: true,\r\n        destroy: true\r\n      })\r\n      break\r\n    case 'new':\r\n      ;[action, method] = [`/api/ads`, 'post']\r\n      Object.assign(adMask, {\r\n        gender: true,\r\n        bodyPart: true,\r\n        type: true,\r\n        title: true,\r\n        description: true,\r\n        photo: true,\r\n        create: true\r\n      })\r\n      break\r\n    default:\r\n      break\r\n  }\r\n  // Hiding Actions from a guest.\r\n  if (!authUser) adMask.update = adMask.destroy = adMask.create = false\r\n\r\n  //    Default behaviors of the form.\r\n  const handleTextFieldChange = event => {\r\n    const target = event.target\r\n    const name = target.name\r\n    let value = target.value\r\n    switch (target.type) {\r\n      case 'file':\r\n        value = target.files[0]\r\n        break\r\n      case 'checkbox':\r\n        value = target.checked\r\n        break\r\n      default:\r\n    }\r\n    props.onChange(name, value)\r\n  }\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    const action = new URL(event.target.action).pathname\r\n    props.onSubmit(action, method) // and not event.target.method since only get and post values can be set.\r\n  }\r\n\r\n  //    Autocomplete related\r\n  // On first render only the input change event fires with null event and empty adAcInputs properties.\r\n  // On autocomplete option check it firstly fires input change event (with click event) and then the autocomplete (listbox click) event, also with click event.\r\n  // Autocomplete Click event - option selected from the listbox.\r\n  const handleAcChange = (event, newValue) => {\r\n    console.log('in handleAcChange')\r\n    console.log(event)\r\n    // Extract name of the textbox (via id of the li element).\r\n    const id = event.target.id\r\n    const name = id.substring(0, id.indexOf('-'))\r\n    props.onChange(name, newValue)\r\n  }\r\n\r\n  // For controlled inputs from the form itself.\r\n  const [adAcInputs, setAdAcInputs] = useState({\r\n    gender: '',\r\n    bodyPart: '',\r\n    type: ''\r\n  })\r\n\r\n  // TODO: On first render the event is null, so I can't get the form field name (maybe only with anonymous function but then I re-render the field on each update which is counter productive a bit).\r\n  // Change event - gender value typed in the textbox.\r\n  const handleGenderInputChange = (event, newInputValue) => {\r\n    setAdAcInputs(adAcInputs => ({ ...adAcInputs, gender: newInputValue }))\r\n  }\r\n  // Change event - bodyPart value typed in the textbox.\r\n  const handleBodyPartInputChange = (event, newInputValue) => {\r\n    setAdAcInputs(adAcInputs => ({ ...adAcInputs, bodyPart: newInputValue }))\r\n  }\r\n  // Change event - type value typed in the textbox.\r\n  const handleTypeInputChange = (event, newInputValue) => {\r\n    setAdAcInputs(adAcInputs => ({ ...adAcInputs, type: newInputValue }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        component=\"form\"\r\n        sx={{\r\n          width: '350px',\r\n          marginTop: '10px'\r\n        }}\r\n        name={props.name}\r\n        action={action}\r\n        method={method} // browser will swap it with get, but in handleSubmit I will change it back to method.\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Stack\r\n          direction=\"column\"\r\n          spacing={3}\r\n          alignItems=\"flex-start\"\r\n          height=\"350px\"\r\n          sx={{\r\n            paddingTop: '10px',\r\n            overflowY: 'scroll',\r\n            '& .MuiAutocomplete-root': { width: '200px' }\r\n          }}\r\n        >\r\n          {adMask.id && (\r\n            <TextField\r\n              id=\"id\"\r\n              label=\"ID\"\r\n              name=\"id\"\r\n              value={props.ad.id}\r\n              onChange={handleTextFieldChange}\r\n              disabled\r\n              sx={{ width: '10ch' }}\r\n            />\r\n          )}\r\n          {adMask.gender && (\r\n            <Autocomplete\r\n              freeSolo\r\n              id=\"gender\"\r\n              value={props.ad.gender}\r\n              onChange={handleAcChange}\r\n              inputValue={adAcInputs.gender}\r\n              onInputChange={handleGenderInputChange}\r\n              options={GENDERS}\r\n              disabled={!authUser}\r\n              renderInput={params => (\r\n                <TextField {...params} name=\"gender\" label=\"Gender\" />\r\n              )}\r\n            />\r\n          )}\r\n          {adMask.bodyPart && (\r\n            <Autocomplete\r\n              freeSolo\r\n              id=\"bodyPart\"\r\n              value={props.ad.bodyPart}\r\n              onChange={handleAcChange}\r\n              inputValue={adAcInputs.bodyPart}\r\n              onInputChange={handleBodyPartInputChange}\r\n              options={BODY_PARTS}\r\n              disabled={!authUser}\r\n              renderInput={params => (\r\n                <TextField {...params} name=\"body-part\" label=\"Body Part\" />\r\n              )}\r\n            />\r\n          )}\r\n          {adMask.type && (\r\n            <Autocomplete\r\n              freeSolo\r\n              id=\"type\"\r\n              value={props.ad.type}\r\n              onChange={handleAcChange}\r\n              inputValue={adAcInputs.type}\r\n              onInputChange={handleTypeInputChange}\r\n              options={TYPES}\r\n              disabled={!authUser}\r\n              renderInput={params => (\r\n                <TextField {...params} name=\"type\" label=\"Type\" />\r\n              )}\r\n            />\r\n          )}\r\n          {adMask.title && (\r\n            <TextField\r\n              id=\"title\"\r\n              label=\"Title\"\r\n              name=\"title\"\r\n              value={props.ad.title}\r\n              onChange={handleTextFieldChange}\r\n              required\r\n              disabled={!authUser}\r\n            />\r\n          )}\r\n          {adMask.description && (\r\n            <TextField\r\n              id=\"description\"\r\n              label=\"Description\"\r\n              name=\"description\"\r\n              value={props.ad.description}\r\n              onChange={handleTextFieldChange}\r\n              required\r\n              disabled={!authUser}\r\n            />\r\n          )}\r\n          {adMask.isGiven && (\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  name=\"isGiven\"\r\n                  checked={props.ad.isGiven}\r\n                  onChange={handleTextFieldChange} // TODO: might not work\r\n                  disabled={!authUser}\r\n                />\r\n              }\r\n              label=\"Is Given?\"\r\n            />\r\n          )}\r\n          {adMask.photo && (\r\n            <Button\r\n              variant=\"contained\"\r\n              component=\"label\"\r\n              startIcon={<AddAPhotoIcon />}\r\n            >\r\n              Upload a Photo\r\n              <input\r\n                id=\"photo\"\r\n                name=\"photo\"\r\n                type=\"file\"\r\n                onChange={handleTextFieldChange}\r\n                disabled={!authUser}\r\n                accept=\"image/*\"\r\n                hidden\r\n              />\r\n            </Button>\r\n          )}\r\n        </Stack>\r\n        <hr />\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n          {adMask.update && (\r\n            <Button type=\"submit\" variant=\"contained\">\r\n              Update\r\n            </Button>\r\n          )}\r\n          {adMask.destroy && (\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"warning\"\r\n              onClick={() => props.onDestroy()} // anonymous function for to ignore click event.\r\n            >\r\n              Destroy\r\n            </Button>\r\n          )}\r\n          {adMask.create && (\r\n            <Button type=\"submit\" variant=\"contained\">\r\n              Create\r\n            </Button>\r\n          )}\r\n        </Stack>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdForm\r\n\r\n//    TODOs\r\n// * problem synching when navigating to AdForm directly the interface says login, but the server didn't disconnect user session.\r\n// * Let the user know his submit is being processed\r\n// * New doesn't work from existing form (id already exists).\r\n//    maybe\r\n// * useReducer and shrink all methods to 2 submit buttons of create/update and destroy (and maybe more methods could be added).\r\n// * update the state at parent immediatly, so that the new element will join its collection in irresolute state (maybe spinner)\r\n// instead of waiting for the server to return a response.","import _ from 'lodash'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { alpha } from '@mui/material/styles'\r\nimport { Box, Stack, Divider, Paper, TextField } from '@mui/material'\r\nimport {\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableSortLabel\r\n} from '@mui/material'\r\nimport Typography from '@mui/material/Typography'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport { FormControlLabel, Switch } from '@mui/material'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport FilterListIcon from '@mui/icons-material/FilterList'\r\nimport { visuallyHidden } from '@mui/utils'\r\n\r\n/**\r\n *\r\n * @param {*} props headers, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort.\r\n * as array of objects of structure [{id: string, isAlignRight: boolean, disablePadding: boolean, label: string},...]\r\n * @returns \\<div> (probably) as MUI TableHead.\r\n */\r\nconst EnhancedTableHead = props => {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort\r\n  } = props\r\n\r\n  const createSortHandler = header => event => {\r\n    onRequestSort(event, header)\r\n  }\r\n\r\n  const handleChange = event => {\r\n    const target = event.target\r\n    const name = target.name\r\n    const value = target.value\r\n    props.onChange(name, value)\r\n  }\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'select all ads'\r\n            }}\r\n          />\r\n        </TableCell>\r\n        {props.headers.map(header => (\r\n          <TableCell\r\n            key={header.id}\r\n            align={header.isAlignRight ? 'right' : 'left'}\r\n            padding={header.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === header.id ? order : false}\r\n          >\r\n            {!props.filterOn ? (\r\n              <TableSortLabel\r\n                active={orderBy === header.id}\r\n                direction={orderBy === header.id ? order : 'asc'}\r\n                onClick={createSortHandler(header.id)}\r\n              >\r\n                <b>\r\n                  {_.startCase(\r\n                    header.label === 'photoName' ? 'photo' : header.label\r\n                  )}\r\n                </b>\r\n                {orderBy === header.id ? (\r\n                  <Box component=\"span\" sx={visuallyHidden}>\r\n                    {order === 'asc' ? 'sorted ascending' : 'sorted descending'}\r\n                  </Box>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            ) : (\r\n              <TextField\r\n                id={header.id}\r\n                name={header.id}\r\n                value={props.rowFilter[header.id]}\r\n                onChange={handleChange}\r\n                label={header.label}\r\n                size=\"small\"\r\n              />\r\n            )}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  )\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n}\r\n\r\n/**\r\n *  Table with paging, sorting and filtering.\r\n * @param {*} props initialElement, rows, onDestroy.\r\n * @returns \\<div> (probably) as MUI TableContainer with \"edit item\" and \"destroy\" ad actions.\r\n */\r\nconst EnhancedTable = props => {\r\n  const location = useLocation()\r\n  console.log(`AdsTable at ${location.pathname}.`)\r\n\r\n  //    Enhanced table related\r\n  const [selectedIndices, setSelectedIndices] = useState([])\r\n  const [page, setPage] = useState(0)\r\n  const [dense, setDense] = useState(true)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  const headers = []\r\n  // Setting the headers objects\r\n  Object.entries(props.initialElement).forEach(([key, value], index) => {\r\n    headers.push({\r\n      id: key,\r\n      isAlignRight: typeof value !== 'string' && key !== 'id' ? true : false,\r\n      disablePadding: index === 0 ? true : false,\r\n      label: key\r\n    })\r\n  })\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - props.rows.length) : 0\r\n\r\n  const handleSelectAllClick = event => {\r\n    let newSelectedRowsIds = []\r\n    if (event.target.checked)\r\n      newSelectedRowsIds = props.rows.map((row, index) => index)\r\n    setSelectedIndices(newSelectedRowsIds)\r\n  }\r\n  const handleRowClick = (event, index) => {\r\n    let newSelectedIndices = [...selectedIndices]\r\n    // add the checked index\r\n    if (!newSelectedIndices.includes(index)) {\r\n      newSelectedIndices.push(index)\r\n    }\r\n    // delete the present index\r\n    else newSelectedIndices.splice(newSelectedIndices.indexOf(index), 1) // TODO: maybe use a map or object instead for efficiency.\r\n    setSelectedIndices(newSelectedIndices)\r\n  }\r\n  const handleDestroy = event => {\r\n    props.onDestroy(selectedIndices)\r\n  }\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10))\r\n    setPage(0)\r\n  }\r\n  const handleDenseChange = event => {\r\n    setDense(event.target.checked)\r\n  }\r\n\r\n  //    Sorting related\r\n  const [order, setOrder] = useState('asc')\r\n  const [orderBy, setOrderBy] = useState('calories')\r\n\r\n  // Helper for sort.\r\n  const getComparator = (order, orderBy) => {\r\n    const ascendingComparator = (r1, r2, orderBy) => {\r\n      if (r1[orderBy] < r2[orderBy]) {\r\n        return -1\r\n      }\r\n      if (r1[orderBy] > r2[orderBy]) {\r\n        return 1\r\n      }\r\n      return 0\r\n    }\r\n\r\n    return order === 'asc'\r\n      ? (r1, r2) => ascendingComparator(r1, r2, orderBy)\r\n      : (r1, r2) => -ascendingComparator(r1, r2, orderBy)\r\n  }\r\n  const handleRequestSort = (event, header) => {\r\n    setOrderBy(header)\r\n    // flip order if the user clicked on the current orderBy header\r\n    const isAsc = orderBy === header && order === 'asc'\r\n    setOrder(isAsc ? 'desc' : 'asc')\r\n  }\r\n\r\n  //    Filter related\r\n  const [filterOn, setFilterOn] = useState(false)\r\n  const [filteredRows, setFilteredRows] = useState([])\r\n  const [rowFilter, setRowFilter] = useState(\r\n    Object.fromEntries(headers.map(header => [header.id, '']))\r\n  )\r\n\r\n  const handleFilterOn = event => {\r\n    setFilterOn(filterOn => !filterOn)\r\n    setFilteredRows(props.rows)\r\n  }\r\n  const handleChange = (name, value) => {\r\n    setRowFilter(rowFilter => ({ ...rowFilter, [name]: value }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // TODO: might want to act on filtered rows when adding chars and on props.rows when deleting them (or use a memento pattern).\r\n    const newFilteredRows = props.rows.filter(row =>\r\n      // TODO: try without return.\r\n      Object.keys(rowFilter).every(rfkey => {\r\n        let value = row[rfkey]\r\n        if (typeof value === 'number') value = value.toString()\r\n        else if (typeof value === 'boolean') value = value ? 'Yes' : 'No'\r\n        return value.includes(rowFilter[rfkey])\r\n      })\r\n    )\r\n    setFilteredRows(newFilteredRows)\r\n  }, [props, rowFilter])\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Paper sx={{ width: '100%', mb: 2 }}>\r\n        <TableContainer sx={{ height: '350px', overflowY: 'scroll' }}>\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"Ads Table\"\r\n            size={dense ? 'small' : 'medium'}\r\n            stickyHeader\r\n            aria-label=\"sticky table\"\r\n          >\r\n            <EnhancedTableHead\r\n              headers={headers}\r\n              numSelected={selectedIndices.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={props.rows.length}\r\n              filterOn={filterOn}\r\n              onChange={handleChange}\r\n              rowFilter={rowFilter}\r\n            />\r\n            <TableBody>\r\n              {(filterOn ? filteredRows : props.rows)\r\n                .slice()\r\n                .sort(getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = selectedIndices.includes(index)\r\n                  const checkboxLabelId = `enhanced-table-checkbox-${index}`\r\n\r\n                  return (\r\n                    <TableRow\r\n                      key={row.id}\r\n                      hover\r\n                      onClick={event => handleRowClick(event, index)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          color=\"primary\"\r\n                          checked={isItemSelected}\r\n                          inputProps={{\r\n                            'aria-labelledby': checkboxLabelId\r\n                          }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell padding=\"none\">\r\n                        <Link\r\n                          underline=\"hover\"\r\n                          component={RouterLink}\r\n                          to={`/ads/${row.id}`}\r\n                        >\r\n                          {row.id}\r\n                        </Link>\r\n                      </TableCell>\r\n\r\n                      {Object.keys(\r\n                        // specific to user.\r\n                        _.omit(row, ['id', 'createdAt', 'updatedAt', 'UserId'])\r\n                      ).map(key => {\r\n                        let cellValue = row[key]\r\n\r\n                        if (typeof row[key] === 'boolean')\r\n                          cellValue = row[key] ? 'Yes' : 'No'\r\n                        else if (key === 'photoName')\r\n                          cellValue = row.photoName && (\r\n                            <img\r\n                              src={`/photos/${row.UserId}/${row.photoName}`}\r\n                              alt={`${row.title}`}\r\n                              width=\"100px\"\r\n                              height=\"100px\"\r\n                            />\r\n                          )\r\n\r\n                        return (\r\n                          <TableCell\r\n                            key={`${row.id}-${row[key]}`}\r\n                            {...(key === 'title'\r\n                              ? {\r\n                                  component: 'th',\r\n                                  id: checkboxLabelId,\r\n                                  scope: 'row'\r\n                                }\r\n                              : {\r\n                                  align:\r\n                                    typeof row[key] !== 'string'\r\n                                      ? 'right'\r\n                                      : 'left'\r\n                                })}\r\n                          >\r\n                            {cellValue}\r\n                          </TableCell>\r\n                        )\r\n                      })}\r\n                      <TableCell>\r\n                        <Link\r\n                          underline=\"hover\"\r\n                          component={RouterLink}\r\n                          to={`/users/${row.UserId}`}\r\n                        >\r\n                          {row.UserId}\r\n                        </Link>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow\r\n                  style={{\r\n                    height: (dense ? 33 : 53) * emptyRows\r\n                  }}\r\n                >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <EnhancedTableToolbar\r\n          dense={dense}\r\n          onDenseChange={handleDenseChange}\r\n          rowsCount={props.rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          onRowsPerPageChange={handleRowsPerPageChange}\r\n          page={page}\r\n          onPageChange={handlePageChange}\r\n          selectedIndices={selectedIndices}\r\n          onDestroy={handleDestroy}\r\n          onFilterOn={handleFilterOn}\r\n        />\r\n      </Paper>\r\n    </Box>\r\n  )\r\n}\r\n\r\n/**\r\n *  Extracted for ease of read of the EnhancedTable component.\r\n * @param {*} props selectedIndices, onDestroy\r\n * @returns\r\n */\r\nfunction EnhancedTableToolbar(props) {\r\n  const numSelected = props.selectedIndices.length\r\n\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      justifyContent=\"space-between\"\r\n      divider={<Divider orientation=\"vertical\" flexItem />}\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(numSelected > 0 && {\r\n          bgcolor: theme =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity\r\n            )\r\n        })\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography variant=\"h4\" id=\"tableTitle\" component=\"div\">\r\n          Ads\r\n        </Typography>\r\n      )}\r\n      <FormControlLabel\r\n        control={\r\n          <Switch checked={props.dense} onChange={props.onDenseChange} />\r\n        }\r\n        label=\"Dense padding\"\r\n      />\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton onClick={props.onDestroy}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton onClick={props.onFilterOn}>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, { value: props.rowsCount, label: 'All' }]}\r\n        component=\"div\"\r\n        count={props.rowsCount}\r\n        rowsPerPage={props.rowsPerPage}\r\n        page={props.page}\r\n        onPageChange={props.onPageChange}\r\n        onRowsPerPageChange={props.onRowsPerPageChange}\r\n      />\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default EnhancedTable\r\n","import React from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Slider from 'react-slick'\r\n\r\n/**\r\n *\r\n * @param {*} props value\r\n * value: array of elements to render.\r\n * @returns\r\n */\r\nconst Carousel = props => {\r\n  const location = useLocation()\r\n  console.log(`Carousel at ${location.pathname}.`)\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  }\r\n\r\n  return (\r\n    <div id=\"slick-slider-wrapper\">\r\n      <Slider {...settings}>\r\n        {props.value.map(\r\n          element =>\r\n            element.photoName && (\r\n              <img\r\n                key={element.id}\r\n                src={`/photos/${element.UserId}/${element.photoName}`}\r\n                alt={element.title}\r\n                width=\"1090px\"\r\n                height=\"400px\"\r\n              />\r\n            )\r\n        )}\r\n      </Slider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Carousel\r\n","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport {\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n  useLocation,\r\n  useParams\r\n} from 'react-router-dom'\r\nimport {\r\n  Button,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  Dialog,\r\n  DialogTitle,\r\n  Snackbar,\r\n  Alert\r\n} from '@mui/material'\r\nimport dataService from '../services/Data.service'\r\nimport { authContext } from '../App'\r\nimport AdForm from '../ReactModels/Ad/AdForm'\r\nimport AdsTable from '../ReactModels/Ad/AdsTable'\r\nimport Carousel from '../Carousel'\r\n\r\nconst GENDERS = [\r\n  'Male',\r\n  'Female',\r\n  'Transgender',\r\n  'Gender neutral',\r\n  'Non-binary',\r\n  'Agender',\r\n  'Pangender',\r\n  'Genderqueer',\r\n  'Two-spirit',\r\n  'Third gender'\r\n]\r\nconst BODY_PARTS = [\r\n  'Torso and Legs',\r\n  'Head',\r\n  'Eyes',\r\n  'Ears',\r\n  'Neck',\r\n  'Torso',\r\n  'hands',\r\n  'Waist',\r\n  'Legs',\r\n  'Feet'\r\n]\r\nconst TYPES = [\r\n  'Sweater',\r\n  'Dress',\r\n  'Hoodies',\r\n  'T-shirt',\r\n  'Flip-flops',\r\n  'Shorts',\r\n  'Skirt',\r\n  'Jeans',\r\n  'Shoes',\r\n  'Coat',\r\n  'High heels',\r\n  'Suit',\r\n  'Cap',\r\n  'Socks',\r\n  'Shirt',\r\n  'Bra',\r\n  'Scarf',\r\n  'Swimsuit',\r\n  'Hat',\r\n  'Gloves',\r\n  'Jacket',\r\n  'Long coat',\r\n  'Boots',\r\n  'Sunglasses',\r\n  'Tie',\r\n  'Polo shirt',\r\n  'Leather jackets'\r\n]\r\n\r\n/**\r\n * Decides what to render: collection or single (like in routes in server :)\r\n * @description manager of a model (collection and element).\r\n * @returns \\<switch> of collection and element components.\r\n */\r\nconst AdManager = () => {\r\n  //    React router hooks\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  console.log(`AdManager at ${location.pathname}.`)\r\n  const { id } = useParams()\r\n  //    Authentication context value\r\n  const { authUser } = useContext(authContext)\r\n\r\n  //    States\r\n  //    Collection\r\n  const initialAds = []\r\n  const [ads, setAds] = useState(initialAds)\r\n  //    Single\r\n  const isEmpty = false // debug.\r\n  const initialAd = {\r\n    id: '',\r\n    gender: isEmpty ? '' : 'Male',\r\n    bodyPart: isEmpty ? '' : 'Torso and Legs',\r\n    type: isEmpty ? '' : 'Sweater',\r\n    title: isEmpty ? '' : 'asdf1',\r\n    description: isEmpty ? '' : 'asdf desc1',\r\n    isGiven: false,\r\n    photoName: '',\r\n    UserId: ''\r\n  }\r\n  const [ad, setAd] = useState(initialAd)\r\n  const initialAdRef = useRef(initialAd)\r\n  // newUserForm Dialog\r\n  const [isAdFormOpen, setAdFormOpen] = useState(false)\r\n  // Feedback related\r\n  const [isSnackbarOpen, setIsSnackbarOpen] = useState(false)\r\n  const [sbAlert, setSbAlert] = useState({ text: '', severity: 'error' }) // sb - snackbar\r\n\r\n  //    Create and update\r\n  // Create\r\n  const handleAdFormOpen = () => {\r\n    setAdFormOpen(true)\r\n  }\r\n  const handleAdFormClose = () => {\r\n    setAdFormOpen(false)\r\n    if (id)\r\n      if (ads.length) setAd(ads[ads.findIndex(ad => id === ad.id.toString())])\r\n      else\r\n        dataService(`/api/ads/${id}`, 'get')\r\n          .then(({ data }) => {\r\n            setAd(data)\r\n          })\r\n          .catch(error =>\r\n            handleSnackbarOpen(error.response.statusText, 'error')\r\n          )\r\n  }\r\n  // Submit form on create and update.\r\n  const handleSubmit = (action, method) => {\r\n    const adToSend = { ...ad } // TODO: maybe delete and send directly? (like in components).\r\n    dataService(action, method, adToSend)\r\n      .then(({ data }) => {\r\n        // Alert that the action was performed successfully.\r\n        const pastTenses = {\r\n          post: 'Created',\r\n          put: 'Updated',\r\n          delete: 'Deleted'\r\n        }\r\n        console.log(`${ad.title} was ${pastTenses[method]}!`)\r\n\r\n        if (method === 'post') {\r\n          setAdFormOpen(false)\r\n          // in AdsTable/Carousel.\r\n          if (!id) setAds(prevAds => prevAds.concat(data))\r\n          handleSnackbarOpen(`Ad ${ad.title} created!`, 'success')\r\n        } else if (method === 'put') {\r\n          // id present anyways.\r\n          // ads in memory.\r\n          if (ads.length !== 0) {\r\n            handleSnackbarOpen(\r\n              `Ad ${id} updated! Redirecting in 6 seconds to table...`,\r\n              'success'\r\n            )\r\n            setTimeout(() => {\r\n              history.push('/ads')\r\n            }, 6000)\r\n          } else handleSnackbarOpen(`Ad ${id} updated!`, 'success')\r\n        }\r\n      })\r\n      .catch(error => {\r\n        handleSnackbarOpen(error.response.statusText, 'error')\r\n      })\r\n  }\r\n  //    Read\r\n  // URL changed.\r\n  useEffect(() => {\r\n    const initialAd = initialAdRef.current\r\n    // /api/ads\r\n    if (!id) {\r\n      // Read ads\r\n      dataService('/api/ads', 'get')\r\n        .then(({ data }) => {\r\n          setAds(data)\r\n        })\r\n        .catch(error => handleSnackbarOpen(error.response.statusText, 'error'))\r\n      setAd(initialAd) // might navigated from a deleted or existing element.\r\n    }\r\n    // /ad\r\n    // Read ad\r\n    else\r\n      dataService(`/api/ads/${id}`, 'get')\r\n        .then(({ data }) => {\r\n          setAd(data)\r\n        })\r\n        .catch(error => handleSnackbarOpen(error.response.text, 'error'))\r\n  }, [id])\r\n  //    Destroy\r\n  const handleDestroy = indices => {\r\n    // /api/ads. indices present.\r\n    if (!id) destroyAds()\r\n    // /ad\r\n    else {\r\n      destroyAd()\r\n      setAd(initialAd)\r\n    }\r\n\r\n    function destroyAds() {\r\n      // TODO: might want to save server requests by sending all ids in action or body.\r\n      while (indices.length) {\r\n        const index = indices.pop()\r\n\r\n        dataService(`/api/ads/${ads[index].id}`, 'delete')\r\n          .then(() => {\r\n            // TODO: Might want to do them all after while loop.\r\n            setAds(prevAds => {\r\n              prevAds.splice(index, 1)\r\n              return prevAds.slice()\r\n            })\r\n            handleSnackbarOpen('Ad(s) destroyed!', 'success')\r\n          })\r\n          .catch(error =>\r\n            handleSnackbarOpen(error.response.statusText, 'error')\r\n          )\r\n      }\r\n    }\r\n\r\n    function destroyAd() {\r\n      dataService(`/api/ads/${id}`, 'delete')\r\n        .then(() => {\r\n          // form is directly navigated.\r\n          if (!ads.length) {\r\n            setAd(initialAd)\r\n            handleSnackbarOpen({\r\n              text: `Ad ${id} deleted!`,\r\n              severity: 'success'\r\n            })\r\n          } else history.replace('/ads')\r\n          handleSnackbarOpen('Ad destroyed!', 'success')\r\n        })\r\n        .catch(error => handleSnackbarOpen(error.response.statusText, 'error'))\r\n    }\r\n  }\r\n\r\n  //    Standard form change handler\r\n  const handleChange = (name, value) => {\r\n    setAd(ad => ({ ...ad, [name]: value }))\r\n    // TODO: how can I change the collection simoultaniously?.\r\n  }\r\n\r\n  //    Feedback\r\n  function handleSnackbarOpen(text, severity) {\r\n    setIsSnackbarOpen(true)\r\n    setSbAlert({ text, severity })\r\n    console.log(`${severity}: ${text}`)\r\n  }\r\n  function handleSnackbarClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return\r\n    }\r\n    setIsSnackbarOpen(false)\r\n  }\r\n\r\n  // Helpers\r\n  const handleGenerate = () => {\r\n    const gender = GENDERS[Math.floor(Math.random() * GENDERS.length)]\r\n    const bodyPart = BODY_PARTS[Math.round(Math.random() * BODY_PARTS.length)]\r\n    const type = TYPES[Math.round(Math.random() * TYPES.length)]\r\n    const title = ad.title.slice(0, -1) + (+ad.title.slice(-1) + 1)\r\n    const description =\r\n      ad.description.slice(0, -1) + (+ad.description.slice(-1) + 1)\r\n    setAd({ ...ad, gender, bodyPart, type, title, description })\r\n  }\r\n  // upated/deleted from an independant page.\r\n  if (sbAlert.text.includes('delete')) return <div>{sbAlert.text}</div>\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/ads\">\r\n          <AdsTable\r\n            initialElement={initialAd}\r\n            rows={ads}\r\n            onDestroy={handleDestroy}\r\n          />\r\n        </Route>\r\n        <Route path=\"/ads/:id\">\r\n          <AdForm\r\n            name=\"existing\"\r\n            ad={ad}\r\n            onSubmit={handleSubmit}\r\n            onChange={handleChange}\r\n            onDestroy={handleDestroy}\r\n          />\r\n        </Route>\r\n        <Route path=\"/adsCarousel\">\r\n          <Carousel value={ads} />\r\n        </Route>\r\n      </Switch>\r\n      {/* Create button */}\r\n      {authUser && (\r\n        <Button variant=\"contained\" onClick={handleAdFormOpen}>\r\n          Create a New ad\r\n        </Button>\r\n      )}\r\n      {/* Create dialog form */}\r\n      <Dialog\r\n        open={isAdFormOpen}\r\n        onClose={handleAdFormClose}\r\n        scroll=\"body\"\r\n        PaperProps={{ sx: { padding: '0px 10px 10px' } }}\r\n      >\r\n        <DialogTitle sx={{ fontSize: '1rem', padding: '8px 24px' }}>\r\n          Create a new Ad\r\n          <Button variant=\"outlined\" size=\"small\" onClick={handleGenerate}>\r\n            Generate random fields!\r\n          </Button>\r\n        </DialogTitle>\r\n        <AdForm\r\n          name=\"new\"\r\n          ad={ad}\r\n          onSubmit={handleSubmit}\r\n          onChange={handleChange}\r\n        />\r\n      </Dialog>\r\n      {/* Feedback snackbar */}\r\n      <Snackbar\r\n        open={isSnackbarOpen}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <Alert\r\n          onClose={handleSnackbarClose}\r\n          severity={sbAlert.severity}\r\n          variant=\"filled\"\r\n        >\r\n          {sbAlert.text}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdManager\r\n\r\nexport const AdSwitch = () => {\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n\r\n  // Radio Group\r\n  const [selectedPage, setSelectedPage] = useState('')\r\n\r\n  // Switch between table and carousel.\r\n  const handlePageChange = event => {\r\n    const selectedPage = event.target.value\r\n    // replace if table or carousel, else push.\r\n    if (location.pathname === '/ads' || location.pathname === '/adsCarousel')\r\n      history.replace(selectedPage)\r\n    else history.push(selectedPage)\r\n  }\r\n  // On navigation, change selected radio.\r\n  useEffect(() => {\r\n    setSelectedPage(location.pathname)\r\n  }, [location.pathname])\r\n\r\n  return (\r\n    <div>\r\n      <RadioGroup\r\n        name=\"ads-page-switcher\"\r\n        value={selectedPage} // from path.\r\n        onChange={handlePageChange}\r\n        row\r\n      >\r\n        <FormControlLabel value=\"/ads\" control={<Radio />} label=\"Table\" />\r\n        <FormControlLabel\r\n          value=\"/adsCarousel\"\r\n          control={<Radio />}\r\n          label=\"Carousel\"\r\n        />\r\n      </RadioGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\n//    TODOs\r\n// * think about merging to one component with 'value' prop that will be a single element or a collection according to whether the use is loggeding.\r\n// * when presenting the ads, then login and then again getting the ads instead of saving them in memory, think about a way to access them globally (maybe redux?).\r\n// * when updating an ad and then navigating through the radio buttun to table, and than to the ad, it doesn't update on client.\r\n","import _ from 'lodash'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { alpha } from '@mui/material/styles'\r\nimport { Box, Stack, Divider, Paper } from '@mui/material'\r\nimport {\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableSortLabel,\r\n  TextField\r\n} from '@mui/material'\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button\r\n} from '@mui/material'\r\nimport Typography from '@mui/material/Typography'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport { FormControlLabel, Switch } from '@mui/material'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport FilterListIcon from '@mui/icons-material/FilterList'\r\nimport { visuallyHidden } from '@mui/utils'\r\n\r\n/**\r\n *\r\n * @param {*} props headers, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort.\r\n * as array of objects of structure [{id: string, isAlignRight: boolean, disablePadding: boolean, label: string},...]\r\n * @returns \\<div> (probably) as MUI TableHead.\r\n */\r\nconst EnhancedTableHead = props => {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort\r\n  } = props\r\n\r\n  const createSortHandler = header => event => {\r\n    onRequestSort(event, header)\r\n  }\r\n\r\n  const handleChange = event => {\r\n    const target = event.target\r\n    const name = target.name\r\n    const value = target.value\r\n    props.onChange(name, value)\r\n  }\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'select all users'\r\n            }}\r\n          />\r\n        </TableCell>\r\n        {props.headers.map(header => (\r\n          <TableCell\r\n            key={header.id}\r\n            align={header.isAlignRight ? 'right' : 'left'}\r\n            padding={header.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === header.id ? order : false}\r\n          >\r\n            {!props.filterOn ? (\r\n              <TableSortLabel\r\n                active={orderBy === header.id}\r\n                direction={orderBy === header.id ? order : 'asc'}\r\n                onClick={createSortHandler(header.id)}\r\n              >\r\n                <b>\r\n                  {_.startCase(\r\n                    header.label === 'photoName' ? 'photo' : header.label\r\n                  )}\r\n                </b>\r\n                {orderBy === header.id ? (\r\n                  <Box component=\"span\" sx={visuallyHidden}>\r\n                    {order === 'asc' ? 'sorted ascending' : 'sorted descending'}\r\n                  </Box>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            ) : (\r\n              <TextField\r\n                id={header.id}\r\n                name={header.id}\r\n                value={props.rowFilter[header.id]}\r\n                onChange={handleChange}\r\n                label={header.label}\r\n                size=\"small\"\r\n              />\r\n            )}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  )\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n}\r\n\r\n/**\r\n *  Table with paging, sorting and filtering.\r\n * @param {*} props initialElement, rows, onDestroy.\r\n * @returns \\<div> (probably) as MUI TableContainer with \"edit item\" and \"destroy\" user actions.\r\n */\r\nconst EnhancedTable = props => {\r\n  const location = useLocation()\r\n  console.log(`UsersTable at ${location.pathname}.`)\r\n\r\n  //    Enhanced table related\r\n  const [selectedIndices, setSelectedIndices] = useState([])\r\n  const [page, setPage] = useState(0)\r\n  const [dense, setDense] = useState(false)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  const headers = []\r\n  Object.entries(props.initialElement).forEach(([key, value], index) => {\r\n    headers.push({\r\n      id: key,\r\n      isAlignRight: typeof value !== 'string' && key !== 'id' ? true : false,\r\n      disablePadding: index === 0 ? true : false,\r\n      label: key\r\n    })\r\n  })\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - props.rows.length) : 0\r\n\r\n  const handleSelectAllClick = event => {\r\n    let newSelectedIndices = []\r\n    if (event.target.checked)\r\n      newSelectedIndices = props.rows.map((row, index) => index)\r\n    setSelectedIndices(newSelectedIndices)\r\n  }\r\n  const handleRowClick = (event, index) => {\r\n    let newSelectedIndices = [...selectedIndices]\r\n    // add the checked index\r\n    if (!newSelectedIndices.includes(index)) {\r\n      newSelectedIndices.push(index)\r\n    }\r\n    // delete the present index\r\n    else newSelectedIndices.splice(newSelectedIndices.indexOf(index), 1)\r\n    setSelectedIndices(newSelectedIndices)\r\n  }\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10))\r\n    setPage(0)\r\n  }\r\n  const handleDenseChange = event => {\r\n    setDense(event.target.checked)\r\n  }\r\n\r\n  //    Sorting related\r\n  const [order, setOrder] = useState('asc')\r\n  const [orderBy, setOrderBy] = useState('calories')\r\n\r\n  // Helper for sort.\r\n  const getComparator = (order, orderBy) => {\r\n    const ascendingComparator = (r1, r2, orderBy) => {\r\n      if (r1[orderBy] < r2[orderBy]) {\r\n        return -1\r\n      }\r\n      if (r1[orderBy] > r2[orderBy]) {\r\n        return 1\r\n      }\r\n      return 0\r\n    }\r\n\r\n    return order === 'asc'\r\n      ? (r1, r2) => ascendingComparator(r1, r2, orderBy)\r\n      : (r1, r2) => -ascendingComparator(r1, r2, orderBy)\r\n  }\r\n  const handleRequestSort = (event, header) => {\r\n    setOrderBy(header)\r\n    // flip order if the user clicked on the current orderBy header\r\n    const isAsc = orderBy === header && order === 'asc'\r\n    setOrder(isAsc ? 'desc' : 'asc')\r\n  }\r\n\r\n  // Filter relate\r\n  const [filterOn, setFilterOn] = useState(false)\r\n  const [filteredRows, setFilteredRows] = useState([])\r\n  const [rowFilter, setRowFilter] = useState(\r\n    Object.fromEntries(headers.map(header => [header.id, '']))\r\n  )\r\n\r\n  const handleFilterOn = () => {\r\n    setFilterOn(filterOn => !filterOn)\r\n    setFilteredRows(props.rows)\r\n  }\r\n  const handleChange = (name, value) => {\r\n    setRowFilter(rowFilter => ({ ...rowFilter, [name]: value }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // TODO: might want to act on filtered rows when adding chars and on props.rows when deleting them (or use a memento pattern).\r\n    const newFilteredRows = props.rows.filter(row =>\r\n      // TODO: try without return.\r\n      Object.keys(rowFilter).every(rfkey => {\r\n        let value = row[rfkey]\r\n        if (typeof value === 'number') value = value.toString()\r\n        else if (typeof value === 'boolean') value = value ? 'Yes' : 'No'\r\n        return value.includes(rowFilter[rfkey])\r\n      })\r\n    )\r\n    setFilteredRows(newFilteredRows)\r\n  }, [props, rowFilter])\r\n\r\n  // Warning before destroying a user.\r\n  const [isDestroyWarningOpen, setIsDestroyWarningOpen] = useState(false)\r\n\r\n  const handleDestroyWarningOpen = () => {\r\n    setIsDestroyWarningOpen(true)\r\n  }\r\n  const handleDestroyWarningClose = () => {\r\n    setIsDestroyWarningOpen(false)\r\n  }\r\n  const handleDestroy = () => {\r\n    setIsDestroyWarningOpen(false)\r\n    props.onDestroy(selectedIndices)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%' }}>\r\n        <Paper sx={{ width: '100%', mb: 2 }}>\r\n          <TableContainer sx={{ height: '350px', overflow: 'scroll' }}>\r\n            <Table\r\n              sx={{ minWidth: 750 }}\r\n              aria-labelledby=\"Users Table\"\r\n              size={dense ? 'small' : 'medium'}\r\n              stickyHeader\r\n              aria-label=\"sticky table\"\r\n            >\r\n              <EnhancedTableHead\r\n                headers={headers}\r\n                numSelected={selectedIndices.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={props.rows.length}\r\n                filterOn={filterOn}\r\n                onChange={handleChange}\r\n                rowFilter={rowFilter}\r\n              />\r\n              <TableBody>\r\n                {(filterOn ? filteredRows : props.rows)\r\n                  .slice()\r\n                  .sort(getComparator(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const isItemSelected = selectedIndices.includes(index)\r\n                    const checkboxLabelId = `enhanced-table-checkbox-${index}`\r\n\r\n                    return (\r\n                      <TableRow\r\n                        key={row.id}\r\n                        hover\r\n                        onClick={event => handleRowClick(event, index)}\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            color=\"primary\"\r\n                            checked={isItemSelected}\r\n                            inputProps={{\r\n                              'aria-labelledby': checkboxLabelId\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell padding=\"none\">\r\n                          <Link\r\n                            underline=\"hover\"\r\n                            component={RouterLink}\r\n                            to={`/users/${row.id}`}\r\n                          >\r\n                            {row.id}\r\n                          </Link>\r\n                        </TableCell>\r\n                        {Object.keys(\r\n                          // Specific to user.\r\n                          _.omit(row, ['id', 'createdAt', 'updatedAt'])\r\n                        ).map(key => {\r\n                          let cellValue = row[key]\r\n\r\n                          if (typeof row[key] === 'boolean')\r\n                            cellValue = row[key] ? 'Yes' : 'No'\r\n                          else if (key === 'photoName')\r\n                            cellValue = row.photoName && (\r\n                              <img\r\n                                src={`/photos/${row.UserId}/${row.photoName}`}\r\n                                alt={`${row.title}`}\r\n                                width=\"100px\"\r\n                                height=\"100px\"\r\n                              />\r\n                            )\r\n\r\n                          return (\r\n                            <TableCell\r\n                              key={`${row.id}-${row[key]}`}\r\n                              {...(key === 'name'\r\n                                ? {\r\n                                    component: 'th',\r\n                                    id: checkboxLabelId,\r\n                                    scope: 'row'\r\n                                  }\r\n                                : {\r\n                                    align:\r\n                                      typeof row[key] !== 'string'\r\n                                        ? 'right'\r\n                                        : 'left'\r\n                                  })}\r\n                            >\r\n                              {cellValue}\r\n                            </TableCell>\r\n                          )\r\n                        })}\r\n                      </TableRow>\r\n                    )\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow\r\n                    style={{\r\n                      height: (dense ? 33 : 53) * emptyRows\r\n                    }}\r\n                  >\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <EnhancedTableToolbar\r\n            numSelected={selectedIndices.length}\r\n            selectedIndices={selectedIndices}\r\n            onDestroy={handleDestroyWarningOpen}\r\n            dense={dense}\r\n            onDenseChange={handleDenseChange}\r\n            rows={props.rows}\r\n            rowsPerPage={rowsPerPage}\r\n            onRowsPerPageChange={handleRowsPerPageChange}\r\n            page={page}\r\n            onPageChange={handlePageChange}\r\n            onFilterOn={handleFilterOn}\r\n          />\r\n        </Paper>\r\n      </Box>\r\n      <Dialog\r\n        open={isDestroyWarningOpen}\r\n        onClose={handleDestroyWarningClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          Destroy the user (and his ads)?\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            If you destroy this user, you will also destroy all of his ads, so\r\n            be careful!\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDestroyWarningClose}>Disagree</Button>\r\n          <Button color=\"warning\" onClick={handleDestroy} autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\n/**\r\n *  Extracted for ease of read of the EnhancedTable component.\r\n * @param {*} props numSelected, selectedIndices, onDestroy\r\n * @returns\r\n */\r\nfunction EnhancedTableToolbar(props) {\r\n  const { numSelected } = props\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      justifyContent=\"space-between\"\r\n      divider={<Divider orientation=\"vertical\" flexItem />}\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(numSelected > 0 && {\r\n          bgcolor: theme =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity\r\n            )\r\n        })\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography variant=\"h4\" id=\"tableTitle\" component=\"div\">\r\n          Users\r\n        </Typography>\r\n      )}\r\n      <FormControlLabel\r\n        control={\r\n          <Switch checked={props.dense} onChange={props.onDenseChange} />\r\n        }\r\n        label=\"Dense padding\"\r\n      />\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton onClick={props.onDestroy}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton onClick={props.onFilterOn}>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, { value: props.rows.length, label: 'All' }]}\r\n        component=\"div\"\r\n        count={props.rows.length}\r\n        rowsPerPage={props.rowsPerPage}\r\n        page={props.page}\r\n        onPageChange={props.onPageChange}\r\n        onRowsPerPageChange={props.onRowsPerPageChange}\r\n      />\r\n    </Stack>\r\n  )\r\n}\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired\r\n}\r\n\r\nexport default EnhancedTable\r\n","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport {\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n  useLocation,\r\n  useParams\r\n} from 'react-router-dom'\r\nimport { Button, Dialog, DialogTitle, Snackbar, Alert } from '@mui/material'\r\nimport { authContext } from '../App'\r\nimport dataService from '../services/Data.service'\r\nimport UserForm from '../ReactModels/User/UserForm'\r\nimport UsersTable from '../ReactModels/User/UsersTable'\r\n\r\n/**\r\n * Decides what to render: collection or single (like in routes in server :)\r\n * @description manager of a model (collection and element).\r\n * @returns \\<switch> of collection and element components.\r\n */\r\nconst UserManager = () => {\r\n  //    React router hooks\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  console.log(`UserManager at ${location.pathname}.`)\r\n  const { id } = useParams()\r\n  //    Authentication context value\r\n  const auth = useContext(authContext)\r\n\r\n  //    States\r\n  // Collection\r\n  const initialUsers = []\r\n  const [users, setUsers] = useState(initialUsers)\r\n  // Single\r\n  const isEmpty = false // debug\r\n  const initialUser = {\r\n    id: '',\r\n    email: isEmpty ? '' : `shalevku@gmail.com`,\r\n    password: isEmpty ? '' : 'asdf',\r\n    name: isEmpty ? '' : `Shalev Kubi`\r\n  }\r\n  const [user, setUser] = useState(initialUser)\r\n  const initialUserRef = useRef(initialUser)\r\n  // newUserForm Dialog\r\n  const [isUserFormOpen, setUserFormOpen] = useState(false)\r\n  // Feedback related\r\n  const [isSnackbarOpen, setIsSnackbarOpen] = useState(false)\r\n  const [sbAlert, setSbAlert] = useState({ text: '', severity: 'error' })\r\n\r\n  //    Create and update\r\n  // Create\r\n  const handleUserFormOpen = () => {\r\n    setUserFormOpen(true)\r\n  }\r\n  const handleUserFormClose = () => {\r\n    setUserFormOpen(false)\r\n    if (id)\r\n      if (users.length)\r\n        setUser(users[users.findIndex(user => id === user.id.toString())])\r\n      else readUser() // Maybe save the previous user somehow (because it is known that there might be canceling of the dialog).\r\n\r\n    function readUser() {\r\n      dataService(`/api/users/${id}`, 'get')\r\n        .then(({ data }) => {\r\n          setUser(data)\r\n        })\r\n        .catch(error => handleSnackbarOpen(error.response.statusText, 'error'))\r\n    }\r\n  }\r\n  // Submit form on create and update.\r\n  const handleSubmit = (action, method) => {\r\n    const userToSend = { ...user }\r\n\r\n    dataService(action, method, userToSend)\r\n      .then(({ data }) => {\r\n        // Alert that the action was performed successfully.\r\n        const pastTenses = {\r\n          post: 'Created',\r\n          put: 'Updated',\r\n          delete: 'Deleted'\r\n        }\r\n        console.log(`${user.name} was ${pastTenses[method]}!`)\r\n\r\n        // action is /api/users for sure.\r\n        if (method === 'post') {\r\n          setUserFormOpen(false)\r\n          // in UsersTable/Carousel.\r\n          if (!id) setUsers(prevUsers => prevUsers.concat(data))\r\n          handleSnackbarOpen(`User ${user.name} created!`, 'success')\r\n        } else if (method === 'put') {\r\n          // id present anyways.\r\n          // users in memory.\r\n          if (users.length !== 0) {\r\n            handleSnackbarOpen(\r\n              `User ${id} updated! Redirecting in 6 seconds to table...`,\r\n              'success'\r\n            )\r\n            setTimeout(() => {\r\n              history.push('/users')\r\n            }, 6000)\r\n          } else handleSnackbarOpen(`User ${id} updated!`, 'success')\r\n        }\r\n      })\r\n      .catch(error => handleSnackbarOpen(error.response.statusText, 'error'))\r\n  }\r\n  //    Read\r\n  // URL changed.\r\n  useEffect(() => {\r\n    const initialUser = initialUserRef.current\r\n\r\n    // /api/users\r\n    if (!id) {\r\n      // Read users\r\n      dataService('/api/users', 'get')\r\n        .then(({ data }) => {\r\n          setUsers(data)\r\n        })\r\n        .catch(error => handleSnackbarOpen(error.response.statusText, 'error'))\r\n      setUser(initialUser) // navigated from a deleted element.\r\n    }\r\n    // /user/:id\r\n    // Read users.\r\n    else\r\n      dataService(`/api/users/${id}`, 'get')\r\n        .then(({ data }) => {\r\n          setUser(data)\r\n        })\r\n        .catch(error => handleSnackbarOpen(error.response.statusText, 'error'))\r\n  }, [id])\r\n  //    Destroy\r\n  const handleDestroy = selectedIndices => {\r\n    // /api/users. selectedIndices present.\r\n    if (!id) {\r\n      destroyUsers()\r\n      // logout the user if he deleted himself\r\n      const authUserIndex = users.findIndex(\r\n        user => auth.authUser.id === user.id\r\n      )\r\n      if (selectedIndices.includes(authUserIndex))\r\n      console.log('in if');  \r\n      setTimeout(() => {\r\n          console.log('about to logout');\r\n          auth.logout()\r\n        }, 3000)\r\n    }\r\n    // /user/:id\r\n    else {\r\n      destroyUser()\r\n      setUser(initialUser)\r\n      if (id === auth.authUser.id) auth.logout()\r\n    }\r\n\r\n    function destroyUsers() {\r\n      while (selectedIndices.length) {\r\n        const index = selectedIndices.pop()\r\n\r\n        dataService(`/api/users/${users[index].id}`, 'delete')\r\n          .then(() => {\r\n            setUsers(prevUsers => {\r\n              prevUsers.splice(index, 1)\r\n              return prevUsers.slice()\r\n            })\r\n            handleSnackbarOpen('User(s) destroyed!', 'success')\r\n          })\r\n          .catch(error => handleSnackbarOpen(error.response.statusText, 'error'))\r\n      }\r\n    }\r\n\r\n    function destroyUser() {\r\n      dataService(`/api/users/${id}`, 'delete')\r\n        .then(() => {\r\n          // form is directly navigated.\r\n          if (!users.length) {\r\n            setUser(initialUser)\r\n            handleSnackbarOpen({\r\n              text: `User ${id} deleted!`,\r\n              severity: 'success'\r\n            })\r\n          } else history.replace('/users')\r\n\r\n          handleSnackbarOpen('User destroyed!', 'success')\r\n        })\r\n        .catch(error => handleSnackbarOpen(error.response.statusText, 'error'))\r\n    }\r\n  }\r\n\r\n  //    Standard form change handler\r\n  const handleChange = (name, value) => {\r\n    setUser(user => ({ ...user, [name]: value }))\r\n  }\r\n\r\n  //    Feedback\r\n  function handleSnackbarOpen(text, severity) {\r\n    setIsSnackbarOpen(true)\r\n    setSbAlert({ text, severity })\r\n    console.log(`${severity}: ${text}`)\r\n  }\r\n  function handleSnackbarClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return\r\n    }\r\n    setIsSnackbarOpen(false)\r\n  }\r\n\r\n  // upated/deleted from an independant page.\r\n  if (sbAlert.text.includes('delete')) return <div>{sbAlert.text}</div>\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/users\">\r\n          <UsersTable\r\n            initialElement={initialUser}\r\n            rows={users}\r\n            onDestroy={handleDestroy}\r\n          />\r\n        </Route>\r\n        <Route path=\"/users/:id\">\r\n          <UserForm\r\n            name=\"existing\"\r\n            user={user}\r\n            onSubmit={handleSubmit}\r\n            onChange={handleChange}\r\n            onDestroy={handleDestroy}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n      {/* Create button */}\r\n      {auth.authUser && (\r\n        <Button variant=\"contained\" onClick={handleUserFormOpen}>\r\n          Create a New user\r\n        </Button>\r\n      )}\r\n      {/* Create dialog form */}\r\n      <Dialog\r\n        open={isUserFormOpen}\r\n        onClose={handleUserFormClose}\r\n        scroll=\"body\"\r\n        PaperProps={{ sx: { padding: '0px 10px 10px' } }}\r\n      >\r\n        <DialogTitle sx={{ fontSize: '1rem', padding: '8px 24px' }}>\r\n          Create a new user\r\n        </DialogTitle>\r\n        <UserForm\r\n          name=\"new\"\r\n          user={user}\r\n          onSubmit={handleSubmit}\r\n          onChange={handleChange}\r\n        />\r\n      </Dialog>\r\n      {/* Feedback snackbar */}\r\n      <Snackbar\r\n        open={isSnackbarOpen}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n        anchorOrigin={{vertical: 'bottom',horizontal: 'center'}}\r\n      >\r\n        <Alert\r\n          onClose={handleSnackbarClose}\r\n          severity={sbAlert.severity}\r\n          variant=\"filled\"\r\n        >\r\n          {sbAlert.text}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserManager\r\n","// Remark: auth stands for authentication.\nimport React, { useState, useContext } from 'react'\nimport {\n  Switch,\n  Route,\n  Redirect,\n  Link as RouterLink,\n  useHistory,\n  useLocation\n} from 'react-router-dom'\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Link,\n  Button,\n  IconButton\n} from '@mui/material'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport dataService from './services/Data.service'\nimport UserSessionManager, { UserAuthSwitch } from './Managers/UserSession'\nimport AdManager, { AdSwitch } from './Managers/Ad.manager'\nimport UserManager from './Managers/User.manager'\n\nconst authContext = React.createContext()\nconst AD_MANAGER_URLs = ['/ads/:id', '/ads', '/adsCarousel']\nconst USER_MANAGER_URLs = ['/users/:id', '/users']\n\nconst App = () => {\n  const history = useHistory()\n  const location = useLocation()\n  console.log(`App at ${location.pathname}.`)\n\n  const [authUser, setAuthUser] = useState(null)\n\n  const login = authUser => {\n    setAuthUser(authUser)\n    const { from } = location.state || { from: { pathname: '/' } }\n    history.replace(from)\n  }\n\n  const logout = async () => {\n    await dataService('/api/userSession', 'delete')\n    setAuthUser(null)\n  }\n\n  const auth = { authUser, login, logout }\n\n  return (\n    <authContext.Provider value={auth}>\n      <>\n        <Box sx={{ flexGrow: 1 }}>\n          <AppBar position=\"static\" color=\"inherit\" sx={{ mb: '3px' }}>\n            <Toolbar>\n              {/* hamburger menu */}\n              <IconButton\n                size=\"large\"\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"menu\"\n                sx={{ mr: 2 }}\n              >\n                <MenuIcon />\n              </IconButton>\n              {/* Homepage link */}\n              <Typography\n                variant=\"h1\"\n                component=\"h1\"\n                fontSize=\"16px\"\n                sx={{ flexGrow: 1 }}\n              >\n                <Link\n                  underline=\"hover\"\n                  component={RouterLink}\n                  to=\"/\"\n                  title=\"Back to the homepage.\"\n                >\n                  Clothes Donation\n                </Link>\n              </Typography>\n              {/* Manager heading */}\n              <Switch>\n                <Route path={USER_MANAGER_URLs}>\n                  {/* Users heading (or link) to manage users */}\n                  <Typography\n                    variant=\"h2\"\n                    component=\"h2\"\n                    fontSize=\"14px\"\n                    sx={{ flexGrow: 1 }}\n                  >\n                    Manage Users\n                  </Typography>\n                </Route>\n                <Route path={['/login', '/createAccount']}>\n                  <Typography\n                    variant=\"h2\"\n                    component=\"h2\"\n                    fontSize=\"14px\"\n                    sx={{ flexGrow: 1 }}\n                  >\n                    User Session!\n                  </Typography>\n                  <UserAuthSwitch />\n                </Route>\n                <Route path={AD_MANAGER_URLs}>\n                  <Typography\n                    variant=\"h2\"\n                    component=\"h2\"\n                    fontSize=\"14px\"\n                    sx={{ flexGrow: 1 }}\n                  >\n                    Ads Manager!\n                  </Typography>\n                </Route>\n              </Switch>\n              <Route path={AD_MANAGER_URLs}>\n                <AdSwitch />\n              </Route>\n\n              {location.pathname !== '/users' && (\n                <Link component={RouterLink} to=\"/users\">\n                  Users\n                </Link>\n              )}\n\n              {/* Logout and login controls. */}\n              {auth.authUser ? (\n                <Button\n                  variant=\"outlined\"\n                  color=\"warning\"\n                  onClick={logout}\n                  title=\"Logout from your account\"\n                  sx={{ mr: 2 }}\n                >\n                  Logout {auth.authUser.name}\n                </Button>\n              ) : (\n                !/login|createAccount/.test(location.pathname) && (\n                  <Link\n                    underline=\"hover\"\n                    component={RouterLink}\n                    to={{\n                      pathname: '/login',\n                      state: { from: location }\n                    }}\n                    title=\"Manage your ads.\"\n                    sx={{ mr: 2 }}\n                  >\n                    Login\n                  </Link>\n                )\n              )}\n            </Toolbar>\n          </AppBar>\n        </Box>\n        <Switch>\n          {/* Maybe instead of a redirect I'll do a main menu. */}\n          <Redirect exact path=\"/\" to=\"/ads\" />\n          <Route path={AD_MANAGER_URLs}>\n            <AdManager />\n          </Route>\n          <PrivateRoute path={USER_MANAGER_URLs}>\n            <UserManager />\n          </PrivateRoute>\n          <Route path={['/login', '/createAccount']}>\n            <UserSessionManager />\n          </Route>\n        </Switch>\n      </>\n    </authContext.Provider>\n  )\n}\n// A wrapper that redirects unauthenticated users.\nconst PrivateRoute = props => {\n  const { authUser } = useContext(authContext)\n  const location = useLocation()\n  console.log(`PrivateRoute: location: ${location.pathname}`)\n\n  return (\n    <Route path={props.path}>\n      {authUser\n        ? props.children\n        : !console.log('please login first!') && (\n            <Redirect\n              to={{\n                pathname: '/login',\n                state: { from: location }\n              }}\n            />\n          )}\n    </Route>\n  )\n}\nexport { authContext }\nexport default App\n\n// * try with default value for context (without provider).\n// * take care of when server send errors.\n\n// Remarks:\n// I chose to unite <model> forms into one because of the efficiency of rendering the same controls and state\n// that can be the same between them such as between login and new user.\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '@fortawesome/fontawesome-free/js/all.js'\nimport 'slick-carousel/slick/slick.css'\nimport 'slick-carousel/slick/slick-theme.css'\nimport './index.css'\nimport App from './App'\n// import reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n\n// credits:\n// from https://reactrouter.com/web/example/auth-workflow (and https://usehooks.com/useAuth/)\n"],"sourceRoot":""}