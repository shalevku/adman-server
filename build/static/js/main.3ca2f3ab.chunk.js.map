{"version":3,"sources":["ReactModels/User/UserForm.jsx","Managers/UserSession.jsx","ReactModels/Ad/AdForm.jsx","ReactModels/Ad/AdsTable.jsx","Carousel.jsx","Managers/Ad.manager.jsx","ReactModels/User/UsersTable.jsx","Managers/User.manager.jsx","App.jsx","index.js"],"names":["UserForm","props","location","useLocation","console","log","name","pathname","params","useParams","authUser","useContext","authContext","action","method","userMask","id","email","password","update","destroy","create","login","Object","assign","useState","userErrors","setUserErrors","userErrorMsgs","setUserErrorMsgs","handleTextFieldChange","event","target","value","valid","validity","validationMessage","substring","indexOf","onChange","isDestroyWarningOpen","setIsDestroyWarningOpen","handleDestroyWarningClose","Container","component","sx","width","marginTop","onSubmit","preventDefault","URL","Stack","direction","spacing","alignItems","height","paddingTop","TextField","label","user","disabled","type","required","error","helperText","InputProps","autoComplete","inputProps","maxLength","justifyContent","Button","variant","color","onClick","marginLeft","waitingSubmit","Box","CircularProgress","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","onDestroy","autoFocus","UserSession","history","useHistory","auth","isSnackbarOpen","setIsSnackbarOpen","text","severity","sbAlert","setSbAlert","setUser","setWaitingSubmit","handleSubmitUser","path","axios","url","headers","data","then","pastTenses","post","put","delete","push","handleSnackbarOpen","catch","response","status","handleChange","handleSnackbarClose","reason","exact","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","UserAuthSwitch","selectedPage","setSelectedPage","useEffect","RadioGroup","replace","row","FormControlLabel","control","Radio","GENDERS","BODY_PARTS","TYPES","AdForm","adMask","gender","bodyPart","title","description","isGiven","photo","handleAcChange","newValue","adAcInputs","setAdAcInputs","handlePhotoDestroy","key","ad","onPhotoDestroy","startIcon","file","files","onPhotoChange","accept","hidden","waitingPhoto","size","src","alt","style","objectFit","margin","waitingPhotoDestroy","Autocomplete","freeSolo","inputValue","onInputChange","newInputValue","options","renderInput","Checkbox","checked","waitingDestroy","EnhancedTableHead","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","createSortHandler","header","TableHead","TableRow","TableCell","padding","indeterminate","map","align","isAlignRight","disablePadding","sortDirection","filterOn","rowFilter","TableSortLabel","active","_","startCase","visuallyHidden","EnhancedTableToolbar","selectedIndices","length","divider","Divider","orientation","flexItem","pl","sm","pr","xs","bgcolor","theme","alpha","palette","primary","main","activatedOpacity","Typography","Switch","dense","onDenseChange","Tooltip","IconButton","onFilterOn","TablePagination","rowsPerPageOptions","rowsCount","count","rowsPerPage","page","onPageChange","onRowsPerPageChange","EnhancedTable","setSelectedIndices","setPage","setDense","setRowsPerPage","entries","initialElement","forEach","index","emptyRows","Math","max","rows","setOrder","setOrderBy","setFilterOn","filteredRows","setFilteredRows","fromEntries","setRowFilter","newFilteredRows","filter","keys","every","rfkey","toString","includes","Paper","mb","TableContainer","overflowY","Table","minWidth","stickyHeader","newSelectedRowsIds","TableBody","slice","sort","ascendingComparator","r1","r2","getComparator","isItemSelected","checkboxLabelId","hover","newSelectedIndices","splice","handleRowClick","role","tabIndex","selected","Link","underline","RouterLink","to","omit","cellValue","scope","UserId","colSpan","parseInt","newPage","currentAd","Carousel","dots","infinite","speed","slidesToShow","slidesToScroll","element","AdManager","ads","setAds","initialAd","setAd","initialAdRef","useRef","isAdFormOpen","setAdFormOpen","waiting","setWaiting","setWaitingPhoto","setWaitingPhotoDestroy","setWaitingDestroy","handleSubmit","prevAds","concat","statusText","message","finally","current","get","handleDestroy","indices","Promise","all","pop","prevAd","handlePhotoChange","a","signedURL","alert","AdsTable","findIndex","scroll","PaperProps","fontSize","floor","random","AdSwitch","overflow","UserManager","users","setUsers","initialUser","initialUserRef","isUserFormOpen","setUserFormOpen","prevUsers","setTimeout","logout","destroyUsers","authUserIndex","prevUser","UsersTable","React","createContext","AD_MANAGER_URLs","USER_MANAGER_URLs","PrivateRoute","children","state","from","App","setAuthUser","Provider","flexGrow","AppBar","position","Toolbar","mr","test","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ca2f3ab.chunk.js","sourcesContent":["// One primary advantage is that on navigation to the same component, some controls don't need to re-render.\r\n// I decided to use the native form and submit button attributes, using a single handleSubmit event handler instead onclick events.\r\nimport React, { useContext, useState } from 'react'\r\nimport { useLocation, useParams } from 'react-router-dom'\r\nimport { Box, Container, Stack, TextField, Button } from '@mui/material'\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  CircularProgress\r\n} from '@mui/material'\r\nimport { authContext } from '../../App'\r\n\r\n/**\r\n * <model>Form component represents a form whos action, method and filtered controls are decided according to the name prop.\r\n * @param {*} props name, user, onSubmit, onChange, onDestroy, waitingSubmit.\r\n * @summary\r\n * name: form to be rendered (with filtered fields and buttons).\r\n * user: user from parent.\r\n * onChange: sets value for special fields such as checkbox and file and then invokes props.onChange().\r\n * @returns \\<form> of existing or new user.\r\n */\r\nconst UserForm = props => {\r\n  //    React router hooks and authentication context value\r\n  const location = useLocation()\r\n  console.log(`${props.name}UserForm at ${location.pathname}.`)\r\n  const params = useParams()\r\n  const { authUser } = useContext(authContext)\r\n\r\n  //    Setting the action, method and userMask of the form.\r\n  let [action, method] = ['', '']\r\n  // A mask of boolean properties.\r\n  const userMask = {\r\n    id: false,\r\n    email: false,\r\n    password: false,\r\n    name: false,\r\n    update: false,\r\n    destroy: false,\r\n    create: false,\r\n    login: false\r\n  }\r\n  // Fields (properties) of the form that will be rendered.\r\n  switch (props.name) {\r\n    case 'existing':\r\n      ;[action, method] = [`/api/users/${params.id}`, 'put']\r\n      Object.assign(userMask, {\r\n        id: true,\r\n        email: true,\r\n        password: true,\r\n        name: true,\r\n        update: true,\r\n        destroy: true\r\n      })\r\n      break\r\n    case 'new':\r\n      ;[action, method] = [`/api/users`, 'post']\r\n      Object.assign(userMask, {\r\n        email: true,\r\n        password: true,\r\n        name: true,\r\n        create: true\r\n      })\r\n      break\r\n    case 'login':\r\n      ;[action, method] = [`/api/userSession`, 'post']\r\n      Object.assign(userMask, {\r\n        email: true,\r\n        password: true,\r\n        login: true\r\n      })\r\n      break\r\n    default:\r\n      break\r\n  }\r\n  // Hiding Actions from a guest.\r\n  if (!authUser) userMask.update = userMask.destroy = false\r\n\r\n  // Form validation errors handling.\r\n  const initialUserErrors = {\r\n    email: false,\r\n    password: false,\r\n    name: false\r\n  }\r\n  const [userErrors, setUserErrors] = useState(initialUserErrors)\r\n  const initialUserErrorMsgs = { email: '', password: '', name: '' }\r\n  const [userErrorMsgs, setUserErrorMsgs] = useState(initialUserErrorMsgs)\r\n\r\n  //    Default behaviors of the form.\r\n  const handleTextFieldChange = event => {\r\n    const target = event.target\r\n    const name = target.name\r\n    let value = target.value\r\n    let valid = target.validity.valid\r\n    let validationMessage = target.validationMessage\r\n    if (name === 'email') {\r\n      if (target.validity.valid) {\r\n        const dotAfterAtPos = value.substring(value.indexOf('@')).indexOf('.')\r\n        // A . after @ isn't present.\r\n        if (dotAfterAtPos === -1) {\r\n          valid = false\r\n          validationMessage = \"You're missing a . after the @\"\r\n        }\r\n      }\r\n    }\r\n    setUserErrors(userErrors => ({ ...userErrors, [name]: !valid }))\r\n    setUserErrorMsgs(userErrorMsgs => ({\r\n      ...userErrorMsgs,\r\n      [name]: validationMessage\r\n    }))\r\n    props.onChange(name, value)\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    const action = new URL(event.target.action).pathname\r\n    props.onSubmit(action, method) // and not event.target.method since only get and post values can be set.\r\n  }\r\n\r\n  // Warning before destroying a user.\r\n  const [isDestroyWarningOpen, setIsDestroyWarningOpen] = useState(false)\r\n\r\n  const handleDestroyWarningOpen = () => {\r\n    setIsDestroyWarningOpen(true)\r\n  }\r\n  const handleDestroyWarningClose = () => {\r\n    setIsDestroyWarningOpen(false)\r\n  }\r\n  const handleDestroy = () => {\r\n    setIsDestroyWarningOpen(false)\r\n    props.onDestroy()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        component=\"form\"\r\n        sx={{\r\n          width: '350px',\r\n          marginTop: '10px'\r\n        }}\r\n        name={props.name}\r\n        action={action}\r\n        method={method} // browser will swap it with get, but in handleSubmit I will change it back to method.\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Stack\r\n          direction=\"column\"\r\n          spacing={3}\r\n          alignItems=\"flex-start\"\r\n          height=\"300px\"\r\n          sx={{ paddingTop: '10px' }}\r\n        >\r\n          {userMask.id && (\r\n            <TextField\r\n              id=\"id\"\r\n              label=\"ID\"\r\n              name=\"id\"\r\n              value={props.user.id}\r\n              onChange={handleTextFieldChange}\r\n              disabled\r\n              sx={{ width: '10ch' }}\r\n            />\r\n          )}\r\n          {userMask.email && (\r\n            <TextField\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={props.user.email}\r\n              onChange={handleTextFieldChange}\r\n              required\r\n              error={userErrors.email}\r\n              {...(userErrors.email && {\r\n                helperText: userErrorMsgs.email\r\n              })}\r\n              InputProps={{ sx: { width: '200px' } }}\r\n            />\r\n          )}\r\n          {userMask.password && (\r\n            <TextField\r\n              id=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={props.user.password}\r\n              onChange={handleTextFieldChange}\r\n              required\r\n              error={userErrors.password}\r\n              {...(userErrors.password && {\r\n                helperText: userErrorMsgs.password\r\n              })}\r\n              autoComplete={\r\n                props.name === 'new' || props.name === 'existing'\r\n                  ? 'new-password'\r\n                  : 'current-password'\r\n              }\r\n              InputProps={{ sx: { width: '200px' } }}\r\n              inputProps={{ maxLength: 20 }}\r\n            />\r\n          )}\r\n          {userMask.name && (\r\n            <TextField\r\n              id=\"name\"\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              value={props.user.name}\r\n              onChange={handleTextFieldChange}\r\n              required\r\n              error={userErrors.name}\r\n              {...(userErrors.name && {\r\n                helperText: userErrorMsgs.name\r\n              })}\r\n            />\r\n          )}\r\n        </Stack>\r\n        <hr />\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n          {userMask.update && (\r\n            <Button type=\"submit\" variant=\"contained\">\r\n              Update\r\n            </Button>\r\n          )}\r\n          {userMask.destroy && (\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"warning\"\r\n              onClick={handleDestroyWarningOpen}\r\n              sx={{ marginLeft: '25px' }}\r\n            >\r\n              Destroy\r\n            </Button>\r\n          )}\r\n          {userMask.create &&\r\n            (props.waitingSubmit ? (\r\n              <Box>\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              <Button type=\"submit\" variant=\"contained\">\r\n                Create\r\n              </Button>\r\n            ))}\r\n          {userMask.login &&\r\n            (props.waitingSubmit ? (\r\n              <Box>\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              <Button type=\"submit\" variant=\"contained\">\r\n                login\r\n              </Button>\r\n            ))}\r\n        </Stack>\r\n      </Container>\r\n      <Dialog\r\n        open={isDestroyWarningOpen}\r\n        onClose={handleDestroyWarningClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          Destroy the user (and his ads)?\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            If you destroy this user, you will also destroy all of his ads, so\r\n            be careful!\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDestroyWarningClose}>Disagree</Button>\r\n          <Button color=\"warning\" onClick={handleDestroy} autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserForm\r\n","import { useState, useEffect, useContext } from 'react'\r\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  Snackbar,\r\n  Alert\r\n} from '@mui/material'\r\nimport { authContext } from '../App'\r\nimport axios from 'axios'\r\nimport UserForm from '../ReactModels/User/UserForm'\r\n\r\nconst UserSession = props => {\r\n  //    React router hooks\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  console.log(`UserSession at ${location.pathname}.`)\r\n  //    Authentication context value\r\n  const auth = useContext(authContext)\r\n  // Feedback related\r\n  const [isSnackbarOpen, setIsSnackbarOpen] = useState(false)\r\n  const [sbAlert, setSbAlert] = useState({ text: '', severity: 'error' })\r\n\r\n  //    States\r\n  const initialUser = {\r\n    id: '',\r\n    email: 'shalevku@gmail.com',\r\n    password: 'asdf',\r\n    name: 'Shalev Kubi'\r\n  }\r\n  const [user, setUser] = useState(initialUser) // just for same user between createAccount and login.\r\n  const [waitingSubmit, setWaitingSubmit] = useState(false)\r\n\r\n  //    Create and login\r\n  const handleSubmitUser = (path, method) => {\r\n    setWaitingSubmit(true)\r\n    axios({\r\n      method,\r\n      url: path,\r\n      headers: { 'content-type': 'application/json' },\r\n      data: user\r\n    })\r\n      .then(({ data }) => {\r\n        setWaitingSubmit(false)\r\n        // Alert that the path was performed successfully.\r\n        const pastTenses = {\r\n          post: path === '/api/users' ? 'Created' : 'Logged in',\r\n          put: 'Updated',\r\n          delete: 'Deleted'\r\n        }\r\n        console.log(`${user.name} was ${pastTenses[method]}!`)\r\n        switch (path) {\r\n          case '/api/users':\r\n            history.push('/login')\r\n            handleSnackbarOpen(`User ${user.name} created!`, 'success')\r\n            break\r\n          case '/api/userSession':\r\n            auth.login(data)\r\n            break\r\n          default:\r\n            break\r\n        }\r\n      })\r\n      .catch(error =>\r\n        handleSnackbarOpen(\r\n          error.response.status === 500\r\n            ? 'The email is taken by someone else.'\r\n            : 'Email or password is incorrect',\r\n          'error'\r\n        )\r\n      )\r\n  }\r\n\r\n  //    Standard form change handler\r\n  const handleChange = (name, value) => {\r\n    setUser(user => ({ ...user, [name]: value }))\r\n  }\r\n\r\n  //    Feedback\r\n  function handleSnackbarOpen(text, severity) {\r\n    setIsSnackbarOpen(true)\r\n    setSbAlert({ text, severity })\r\n    console.log(`${severity}: ${text}`)\r\n  }\r\n  function handleSnackbarClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return\r\n    }\r\n    setIsSnackbarOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/login\">\r\n          <UserForm\r\n            name=\"login\"\r\n            user={user}\r\n            onSubmit={handleSubmitUser}\r\n            onChange={handleChange}\r\n            waitingSubmit={waitingSubmit}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/createAccount\">\r\n          <UserForm\r\n            name=\"new\"\r\n            user={user}\r\n            onSubmit={handleSubmitUser}\r\n            onChange={handleChange}\r\n            waitingSubmit={waitingSubmit}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n      {/* Feedback snackbar */}\r\n      <Snackbar\r\n        open={isSnackbarOpen}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <Alert\r\n          onClose={handleSnackbarClose}\r\n          severity={sbAlert.severity}\r\n          variant=\"filled\"\r\n        >\r\n          {sbAlert.text}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserSession\r\n\r\nexport const UserAuthSwitch = () => {\r\n  //    React router hooks\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n\r\n  // Radio Group\r\n  const [selectedPage, setSelectedPage] = useState('')\r\n\r\n  // Switch between login and createAccount user forms.\r\n  const handlePageChange = event => {\r\n    const selectedPage = event.target.value\r\n    // replace if login or newAccount, else push.\r\n    if (\r\n      location.pathname === '/login' ||\r\n      location.pathname === '/createAccount'\r\n    )\r\n      history.replace(selectedPage)\r\n    else history.push(selectedPage)\r\n  }\r\n  // On navigation, change selected radio.\r\n  useEffect(() => {\r\n    setSelectedPage(location.pathname)\r\n  }, [location.pathname])\r\n\r\n  return (\r\n    <div>\r\n      <RadioGroup\r\n        name=\"user-session-page-switcher\"\r\n        value={selectedPage} // from path.\r\n        onChange={handlePageChange}\r\n        row\r\n      >\r\n        <FormControlLabel value=\"/login\" control={<Radio />} label=\"Login\" />\r\n        <FormControlLabel\r\n          value=\"/createAccount\"\r\n          control={<Radio />}\r\n          label=\"Create Account\"\r\n        />\r\n      </RadioGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\n//      TODOS:\r\n//      Maybe:\r\n// * do the login request a get request that the server will check if the user has a session and if not\r\n// it will log him in if he exists or reject if not. (so its a get request with a body).\r\n// * Try the handler directly in the input property.\r\n// * Reset form input doesn't work, try it.\r\n","// One primary advantage is that on navigation to the same component, some controls don't need to re-render.\r\n// I decided to use the native form and submit button attributes, using a single handleSubmit event handler instead onclick events.\r\nimport React, { useContext, useState } from 'react'\r\nimport { useLocation, useParams } from 'react-router-dom'\r\nimport {\r\n  Box,\r\n  Container,\r\n  Stack,\r\n  TextField,\r\n  Button,\r\n  Autocomplete,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  CircularProgress\r\n} from '@mui/material'\r\nimport AddAPhotoIcon from '@mui/icons-material/AddAPhoto'\r\nimport { authContext } from '../../App'\r\n\r\nconst GENDERS = [\r\n  'Male',\r\n  'Female',\r\n  'Transgender',\r\n  'Gender neutral',\r\n  'Non-binary',\r\n  'Agender',\r\n  'Pangender',\r\n  'Genderqueer',\r\n  'Two-spirit',\r\n  'Third gender'\r\n]\r\nconst BODY_PARTS = [\r\n  'Torso and Legs',\r\n  'Head',\r\n  'Eyes',\r\n  'Ears',\r\n  'Neck',\r\n  'Torso',\r\n  'hands',\r\n  'Waist',\r\n  'Legs',\r\n  'Feet'\r\n]\r\nconst TYPES = [\r\n  'Sweater',\r\n  'Dress',\r\n  'Hoodies',\r\n  'T-shirt',\r\n  'Flip-flops',\r\n  'Shorts',\r\n  'Skirt',\r\n  'Jeans',\r\n  'Shoes',\r\n  'Coat',\r\n  'High heels',\r\n  'Suit',\r\n  'Cap',\r\n  'Socks',\r\n  'Shirt',\r\n  'Bra',\r\n  'Scarf',\r\n  'Swimsuit',\r\n  'Hat',\r\n  'Gloves',\r\n  'Jacket',\r\n  'Long coat',\r\n  'Boots',\r\n  'Sunglasses',\r\n  'Tie',\r\n  'Polo shirt',\r\n  'Leather jackets'\r\n]\r\n\r\n/**\r\n * <model>Form component represents a form whos action, method and filtered controls are decided according to the name prop.\r\n * @param {*} props name, ad, onSubmit, onChange, onDestroy, waiting, waitingPhoto.\r\n * @summary\r\n * name: form to be rendered (rendered with filtered fields and buttons).\r\n * ad: ad from parent.\r\n * onChange: Invoked when one of the form\r\n * onPhotoChange:\r\n * @returns \\<form> of existing or new ad.\r\n */\r\nconst AdForm = props => {\r\n  //    React router hooks and authentication context value\r\n  console.log(`${props.name}AdForm at ${useLocation().pathname}.`)\r\n  const params = useParams()\r\n  const { authUser } = useContext(authContext)\r\n\r\n  //    Setting the action, method and adMask of the form.\r\n  let [action, method] = ['', '']\r\n  // A mask of boolean properties.\r\n  const adMask = {\r\n    id: false,\r\n    gender: false,\r\n    bodyPart: false,\r\n    type: false,\r\n    title: false,\r\n    description: false,\r\n    isGiven: false,\r\n    photo: false,\r\n    update: false,\r\n    destroy: false,\r\n    create: false\r\n  }\r\n  // Fields (properties) of the form that will be rendered.\r\n  switch (props.name) {\r\n    case 'existing':\r\n      ;[action, method] = [`/api/ads/${params.id}`, 'put']\r\n      Object.assign(adMask, {\r\n        id: true,\r\n        gender: true,\r\n        bodyPart: true,\r\n        type: true,\r\n        title: true,\r\n        description: true,\r\n        isGiven: true,\r\n        photo: true,\r\n        update: authUser ? true : false,\r\n        destroy: authUser ? true : false\r\n      })\r\n      break\r\n    case 'new':\r\n      ;[action, method] = [`/api/ads`, 'post']\r\n      Object.assign(adMask, {\r\n        gender: true,\r\n        bodyPart: true,\r\n        type: true,\r\n        title: true,\r\n        description: true,\r\n        photo: true,\r\n        create: authUser ? true : false\r\n      })\r\n      break\r\n    default:\r\n      break\r\n  }\r\n\r\n  //    Default behaviors of the form.\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    const action = new URL(event.target.action).pathname\r\n    props.onSubmit(action, method) // and not event.target.method since only get and post values can be set.\r\n  }\r\n  const handleDestroy = () => {\r\n    // If the ad has a photo than destroy the photo.\r\n    if (props.ad.photo !== '/default.png') {\r\n      const key = new URL(props.ad.photo).pathname\r\n      props.onPhotoDestroy(key)\r\n    }\r\n    // Destroy the ad.\r\n    props.onDestroy()\r\n  }\r\n  const handleTextFieldChange = event => {\r\n    props.onChange(event.target.name, event.target.value)\r\n  }\r\n  const handleCheckboxChange = event => {\r\n    props.onChange(event.target.name, event.target.checked)\r\n  }\r\n  // Autocomplete related:\r\n  // On first render only the input change event fires with null event and empty adAcInputs properties.\r\n  // On autocomplete option check it firstly fires input change event (with click event) and then the autocomplete (listbox click) event, also with click event.\r\n  // Autocomplete Click event - option selected from the listbox.\r\n  const handleAcChange = (event, newValue) => {\r\n    // Extract name of the textbox (via id of the li element).\r\n    const id = event.target.id\r\n    const name = id.substring(0, id.indexOf('-'))\r\n    props.onChange(name, newValue)\r\n  }\r\n  // For controlled inputs from the form itself.\r\n  const [adAcInputs, setAdAcInputs] = useState({\r\n    gender: '',\r\n    bodyPart: '',\r\n    type: ''\r\n  })\r\n  // TODO: On first render the event is null, so I can't get the form field name (maybe only with anonymous function but then I re-render the field on each update which is counter productive a bit).\r\n  // Change event - gender value typed in the textbox.\r\n  const handleGenderInputChange = (event, newInputValue) => {\r\n    setAdAcInputs(adAcInputs => ({ ...adAcInputs, gender: newInputValue }))\r\n  }\r\n  // Change event - bodyPart value typed in the textbox.\r\n  const handleBodyPartInputChange = (event, newInputValue) => {\r\n    setAdAcInputs(adAcInputs => ({ ...adAcInputs, bodyPart: newInputValue }))\r\n  }\r\n  // Change event - type value typed in the textbox.\r\n  const handleTypeInputChange = (event, newInputValue) => {\r\n    setAdAcInputs(adAcInputs => ({ ...adAcInputs, type: newInputValue }))\r\n  }\r\n  //    Photos UD - TODO: think about moving the server communication to the parent manager.\r\n  // Upload photo to signed URL retrieved from server.\r\n  function handlePhotoChange(event) {\r\n    // If the ad has a photo than destroy the photo.\r\n    if (props.name === 'existing' && props.ad.photo !== '/default.png') {\r\n      handlePhotoDestroy()\r\n    }\r\n    // Upload the new photo\r\n    const file = event.target.files[0]\r\n    props.onPhotoChange(file)\r\n  }\r\n  function handlePhotoDestroy() {\r\n    const key = new URL(props.ad.photo).pathname\r\n    props.onPhotoDestroy(key)\r\n  }\r\n  console.log(props.ad.photo);\r\n  // helper state\r\n  return (\r\n    <>\r\n      <Container\r\n        component=\"form\"\r\n        name={props.name}\r\n        action={action}\r\n        method={method} // browser will swap it with get, but in handleSubmit I will change it back to method.\r\n        onSubmit={handleSubmit}\r\n        sx={{\r\n          width: '350px'\r\n        }}\r\n      >\r\n        <Stack\r\n          direction=\"column\"\r\n          spacing={3}\r\n          alignItems=\"center\"\r\n          sx={{\r\n            '& .MuiAutocomplete-root': { width: '200px' }\r\n          }}\r\n        >\r\n          {adMask.photo && (\r\n            <Box>\r\n              <Button\r\n                variant=\"contained\"\r\n                component=\"label\"\r\n                startIcon={<AddAPhotoIcon />}\r\n              >\r\n                <input type=\"hidden\" name=\"photo\" value={props.ad.photo} />\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"photo-file\"\r\n                  onChange={handlePhotoChange}\r\n                  disabled={!authUser}\r\n                  accept=\"image/*\"\r\n                  hidden\r\n                />\r\n                <Box>\r\n                  {props.waitingPhoto ? (\r\n                    <CircularProgress color=\"secondary\" size={100} />\r\n                  ) : (\r\n                    <img\r\n                      id=\"preview\"\r\n                      src={props.ad.photo}\r\n                      alt=\"preview\"\r\n                      style={{\r\n                        width: '150px',\r\n                        height: '100px',\r\n                        objectFit: 'scale-down'\r\n                      }}\r\n                    />\r\n                  )}\r\n                </Box>\r\n              </Button>\r\n              <Box sx={{ width: '150px', margin: 'auto' }}>\r\n                {props.ad.photo !== '/default.png' &&\r\n                  (props.waitingPhotoDestroy ? (\r\n                    <CircularProgress />\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"error\"\r\n                      size=\"small\"\r\n                      onClick={handlePhotoDestroy}\r\n                      sx={{}}\r\n                    >\r\n                      Destroy photo\r\n                    </Button>\r\n                  ))}\r\n              </Box>\r\n            </Box>\r\n          )}\r\n          {adMask.id && (\r\n            <TextField\r\n              id=\"id\"\r\n              label=\"ID\"\r\n              name=\"id\"\r\n              value={props.ad.id}\r\n              onChange={handleTextFieldChange}\r\n              disabled\r\n              sx={{ width: '10ch' }}\r\n            />\r\n          )}\r\n          {adMask.gender && (\r\n            <Autocomplete\r\n              freeSolo\r\n              id=\"gender\"\r\n              value={props.ad.gender}\r\n              onChange={handleAcChange}\r\n              inputValue={adAcInputs.gender}\r\n              onInputChange={handleGenderInputChange}\r\n              options={GENDERS}\r\n              disabled={!authUser}\r\n              renderInput={params => (\r\n                <TextField {...params} name=\"gender\" label=\"Gender\" />\r\n              )}\r\n            />\r\n          )}\r\n          {adMask.bodyPart && (\r\n            <Autocomplete\r\n              freeSolo\r\n              id=\"bodyPart\"\r\n              value={props.ad.bodyPart}\r\n              onChange={handleAcChange}\r\n              inputValue={adAcInputs.bodyPart}\r\n              onInputChange={handleBodyPartInputChange}\r\n              options={BODY_PARTS}\r\n              disabled={!authUser}\r\n              renderInput={params => (\r\n                <TextField {...params} name=\"body-part\" label=\"Body Part\" />\r\n              )}\r\n            />\r\n          )}\r\n          {adMask.type && (\r\n            <Autocomplete\r\n              freeSolo\r\n              id=\"type\"\r\n              value={props.ad.type}\r\n              onChange={handleAcChange}\r\n              inputValue={adAcInputs.type}\r\n              onInputChange={handleTypeInputChange}\r\n              options={TYPES}\r\n              disabled={!authUser}\r\n              renderInput={params => (\r\n                <TextField {...params} name=\"type\" label=\"Type\" />\r\n              )}\r\n            />\r\n          )}\r\n          {adMask.title && (\r\n            <TextField\r\n              id=\"title\"\r\n              label=\"Title\"\r\n              name=\"title\"\r\n              value={props.ad.title}\r\n              onChange={handleTextFieldChange}\r\n              required\r\n              disabled={!authUser}\r\n            />\r\n          )}\r\n          {adMask.description && (\r\n            <TextField\r\n              id=\"description\"\r\n              label=\"Description\"\r\n              name=\"description\"\r\n              value={props.ad.description}\r\n              onChange={handleTextFieldChange}\r\n              required\r\n              disabled={!authUser}\r\n            />\r\n          )}\r\n          {adMask.isGiven && (\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  name=\"isGiven\"\r\n                  checked={props.ad.isGiven}\r\n                  onChange={handleCheckboxChange} // TODO: might not work\r\n                  disabled={!authUser}\r\n                />\r\n              }\r\n              label=\"Is Given?\"\r\n            />\r\n          )}\r\n        </Stack>\r\n        <hr />\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n          {adMask.update &&\r\n            (props.waitingSubmit ? (\r\n              <Box>\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                disabled={props.waitingPhoto || props.waitingPhotoDestroy}\r\n              >\r\n                Update\r\n              </Button>\r\n            ))}\r\n          {adMask.destroy &&\r\n            (props.waitingDestroy ? (\r\n              <Box>\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"warning\"\r\n                onClick={handleDestroy}\r\n                disabled={props.waitingPhoto || props.waitingPhotoDestroy}\r\n              >\r\n                Destroy\r\n              </Button>\r\n            ))}\r\n          {adMask.create &&\r\n            (props.waitingSubmit ? (\r\n              <Box>\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                disabled={props.waitingPhoto || props.waitingPhotoDestroy}\r\n              >\r\n                Create\r\n              </Button>\r\n            ))}\r\n        </Stack>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdForm\r\n\r\n//    TODOs\r\n// * problem synching when navigating to AdForm directly the interface says login, but the server didn't disconnect user session.\r\n// * Let the user know his submit is being processed\r\n// * New doesn't work from existing form (id already exists).\r\n//    maybe\r\n// * useReducer and shrink all methods to 2 submit buttons of create/update and destroy (and maybe more methods could be added).\r\n// * update the state at parent immediatly, so that the new element will join its collection in irresolute state (maybe spinner)\r\n// instead of waiting for the server to return a response.\r\n","import _ from 'lodash'\r\nimport React, { useState, useEffect, useContext } from 'react'\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { alpha } from '@mui/material/styles'\r\nimport { Box, Stack, Divider, Paper, TextField } from '@mui/material'\r\nimport {\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableSortLabel\r\n} from '@mui/material'\r\nimport {\r\n  Switch,\r\n  Typography,\r\n  CircularProgress,\r\n  Checkbox,\r\n  Tooltip,\r\n  FormControlLabel,\r\n  IconButton\r\n} from '@mui/material'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport FilterListIcon from '@mui/icons-material/FilterList'\r\nimport { visuallyHidden } from '@mui/utils'\r\nimport { authContext } from '../../App'\r\n\r\n/**\r\n *\r\n * @param {*} props headers, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort.\r\n * as array of objects of structure [{id: string, isAlignRight: boolean, disablePadding: boolean, label: string},...]\r\n * @returns \\<div> (probably) as MUI TableHead.\r\n */\r\nconst EnhancedTableHead = props => {\r\n  const { authUser } = useContext(authContext)\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort\r\n  } = props\r\n\r\n  const createSortHandler = header => event => {\r\n    onRequestSort(event, header)\r\n  }\r\n\r\n  const handleChange = event => {\r\n    const target = event.target\r\n    const name = target.name\r\n    const value = target.value\r\n    props.onChange(name, value)\r\n  }\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {authUser && (\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              color=\"primary\"\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={rowCount > 0 && numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n              inputProps={{\r\n                'aria-label': 'select all ads'\r\n              }}\r\n            />\r\n          </TableCell>\r\n        )}\r\n        {props.headers.map(header => (\r\n          <TableCell\r\n            key={header.id}\r\n            align={header.isAlignRight ? 'right' : 'left'}\r\n            padding={header.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === header.id ? order : false}\r\n          >\r\n            {!props.filterOn ? (\r\n              <TableSortLabel\r\n                active={orderBy === header.id}\r\n                direction={orderBy === header.id ? order : 'asc'}\r\n                onClick={createSortHandler(header.id)}\r\n              >\r\n                <b>\r\n                  {_.startCase(\r\n                    header.label === 'photo' ? 'photo' : header.label\r\n                  )}\r\n                </b>\r\n                {orderBy === header.id ? (\r\n                  <Box component=\"span\" sx={visuallyHidden}>\r\n                    {order === 'asc' ? 'sorted ascending' : 'sorted descending'}\r\n                  </Box>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            ) : (\r\n              <TextField\r\n                id={header.id}\r\n                name={header.id}\r\n                value={props.rowFilter[header.id]}\r\n                onChange={handleChange}\r\n                label={header.label}\r\n                size=\"small\"\r\n              />\r\n            )}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  )\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n}\r\n\r\n/**\r\n *  Table with paging, sorting and filtering.\r\n * @param {*} props initialElement, rows, onDestroy, onPhotoDestroy, waitingDestroy.\r\n * @returns \\<div> (probably) as MUI TableContainer with \"edit item\" and \"destroy\" ad actions.\r\n */\r\nconst EnhancedTable = props => {\r\n  const { authUser } = useContext(authContext)\r\n  //    React router hooks\r\n  const location = useLocation()\r\n  console.log(`AdsTable at ${location.pathname}.`)\r\n\r\n  //    Enhanced table related\r\n  const [selectedIndices, setSelectedIndices] = useState([])\r\n  const [page, setPage] = useState(0)\r\n  const [dense, setDense] = useState(true)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  const headers = []\r\n  // Setting the headers objects\r\n  Object.entries(props.initialElement).forEach(([key, value], index) => {\r\n    headers.push({\r\n      id: key,\r\n      isAlignRight: typeof value !== 'string' && key !== 'id' ? true : false,\r\n      disablePadding: index === 0 ? true : false,\r\n      label: key\r\n    })\r\n  })\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - props.rows.length) : 0\r\n\r\n  const handleSelectAllClick = event => {\r\n    let newSelectedRowsIds = []\r\n    if (event.target.checked)\r\n      newSelectedRowsIds = props.rows.map((row, index) => index)\r\n    setSelectedIndices(newSelectedRowsIds)\r\n  }\r\n  const handleRowClick = (event, index) => {\r\n    let newSelectedIndices = [...selectedIndices]\r\n    // add the checked index\r\n    if (!newSelectedIndices.includes(index)) {\r\n      newSelectedIndices.push(index)\r\n    }\r\n    // delete the present index\r\n    else newSelectedIndices.splice(newSelectedIndices.indexOf(index), 1) // TODO: maybe use a map or object instead for efficiency.\r\n    setSelectedIndices(newSelectedIndices)\r\n  }\r\n  const handleDestroy = event => {\r\n    // Destroy each ad's photo, if exist.\r\n    selectedIndices.forEach(index => {\r\n      // TODO: might want to send in one request.\r\n      const currentAd = props.rows[index]\r\n      // if photo exist, destroy it.\r\n      if (currentAd.photo !== '/default.png') {\r\n        const key = new URL(currentAd.photo).pathname\r\n        props.onPhotoDestroy(key)\r\n      }\r\n    })\r\n    // Destroy the ads themselves.\r\n    props.onDestroy(selectedIndices)\r\n  }\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10))\r\n    setPage(0)\r\n  }\r\n  const handleDenseChange = event => {\r\n    setDense(event.target.checked)\r\n  }\r\n\r\n  //    Sorting related\r\n  const [order, setOrder] = useState('asc')\r\n  const [orderBy, setOrderBy] = useState('calories')\r\n\r\n  // Helper for sort.\r\n  const getComparator = (order, orderBy) => {\r\n    const ascendingComparator = (r1, r2, orderBy) => {\r\n      if (r1[orderBy] < r2[orderBy]) {\r\n        return -1\r\n      }\r\n      if (r1[orderBy] > r2[orderBy]) {\r\n        return 1\r\n      }\r\n      return 0\r\n    }\r\n\r\n    return order === 'asc'\r\n      ? (r1, r2) => ascendingComparator(r1, r2, orderBy)\r\n      : (r1, r2) => -ascendingComparator(r1, r2, orderBy)\r\n  }\r\n  const handleRequestSort = (event, header) => {\r\n    setOrderBy(header)\r\n    // flip order if the user clicked on the current orderBy header\r\n    const isAsc = orderBy === header && order === 'asc'\r\n    setOrder(isAsc ? 'desc' : 'asc')\r\n  }\r\n\r\n  //    Filter related\r\n  const [filterOn, setFilterOn] = useState(false)\r\n  const [filteredRows, setFilteredRows] = useState([])\r\n  const [rowFilter, setRowFilter] = useState(\r\n    Object.fromEntries(headers.map(header => [header.id, '']))\r\n  )\r\n\r\n  const handleFilterOn = event => {\r\n    setFilterOn(filterOn => !filterOn)\r\n    setFilteredRows(props.rows)\r\n  }\r\n  const handleChange = (name, value) => {\r\n    setRowFilter(rowFilter => ({ ...rowFilter, [name]: value }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // TODO: might want to act on filtered rows when adding chars and on props.rows when deleting them (or use a memento pattern).\r\n    const newFilteredRows = props.rows.filter(row => {\r\n      return Object.keys(rowFilter).every(rfkey => {\r\n        let value = row[rfkey]\r\n        if (typeof value === 'number') value = value.toString()\r\n        else if (typeof value === 'boolean') value = value ? 'Yes' : 'No'\r\n        return value.includes(rowFilter[rfkey])\r\n      })\r\n    })\r\n    setFilteredRows(newFilteredRows)\r\n  }, [props, rowFilter])\r\n\r\n  return (\r\n    <Box>\r\n      <Paper sx={{ width: '100%', mb: 2 }}>\r\n        <TableContainer sx={{ height: '350px', overflowY: 'scroll' }}>\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"Ads Table\"\r\n            size={dense ? 'small' : 'medium'}\r\n            stickyHeader\r\n            aria-label=\"sticky table\"\r\n          >\r\n            <EnhancedTableHead\r\n              headers={headers}\r\n              numSelected={selectedIndices.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={props.rows.length}\r\n              filterOn={filterOn}\r\n              onChange={handleChange}\r\n              rowFilter={rowFilter}\r\n            />\r\n            <TableBody>\r\n              {(filterOn ? filteredRows : props.rows)\r\n                .slice()\r\n                .sort(getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = selectedIndices.includes(index)\r\n                  const checkboxLabelId = `enhanced-table-checkbox-${index}`\r\n\r\n                  return (\r\n                    <TableRow\r\n                      key={row.id}\r\n                      hover\r\n                      onClick={event => handleRowClick(event, index)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      {authUser && (\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            color=\"primary\"\r\n                            checked={isItemSelected}\r\n                            inputProps={{\r\n                              'aria-labelledby': checkboxLabelId\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n                      )}\r\n                      <TableCell padding=\"none\">\r\n                        <Link\r\n                          underline=\"hover\"\r\n                          component={RouterLink}\r\n                          to={`/ads/${row.id}`}\r\n                        >\r\n                          {row.id}\r\n                        </Link>\r\n                      </TableCell>\r\n\r\n                      {Object.keys(\r\n                        // specific to user.\r\n                        _.omit(row, ['id', 'createdAt', 'updatedAt', 'UserId'])\r\n                      ).map(key => {\r\n                        let cellValue = row[key]\r\n\r\n                        if (typeof row[key] === 'boolean')\r\n                          cellValue = row[key] ? 'Yes' : 'No'\r\n                        else if (key === 'photo')\r\n                          cellValue = row.photo && (\r\n                            <img\r\n                              src={row.photo}\r\n                              alt={`${row.title}`}\r\n                              width=\"100px\"\r\n                              height=\"100px\"\r\n                            />\r\n                          )\r\n\r\n                        return (\r\n                          <TableCell\r\n                            key={`${row.id}-${row[key]}`}\r\n                            {...(key === 'title'\r\n                              ? {\r\n                                  component: 'th',\r\n                                  id: checkboxLabelId,\r\n                                  scope: 'row'\r\n                                }\r\n                              : {\r\n                                  align:\r\n                                    typeof row[key] !== 'string'\r\n                                      ? 'right'\r\n                                      : 'left'\r\n                                })}\r\n                          >\r\n                            {cellValue}\r\n                          </TableCell>\r\n                        )\r\n                      })}\r\n                      <TableCell>\r\n                        <Link\r\n                          underline=\"hover\"\r\n                          component={RouterLink}\r\n                          to={`/users/${row.UserId}`}\r\n                        >\r\n                          {row.UserId}\r\n                        </Link>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow\r\n                  style={{\r\n                    height: (dense ? 33 : 53) * emptyRows\r\n                  }}\r\n                >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <EnhancedTableToolbar\r\n          dense={dense}\r\n          onDenseChange={handleDenseChange}\r\n          rowsCount={props.rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          onRowsPerPageChange={handleRowsPerPageChange}\r\n          page={page}\r\n          onPageChange={handlePageChange}\r\n          selectedIndices={selectedIndices}\r\n          onDestroy={handleDestroy}\r\n          onFilterOn={handleFilterOn}\r\n          waitingDestroy={props.waitingDestroy}\r\n        />\r\n      </Paper>\r\n    </Box>\r\n  )\r\n}\r\n\r\n/**\r\n *  Extracted for ease of read of the EnhancedTable component.\r\n * @param {*} props selectedIndices, onDestroy\r\n * @returns\r\n */\r\nfunction EnhancedTableToolbar(props) {\r\n  const numSelected = props.selectedIndices.length\r\n\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      justifyContent=\"space-between\"\r\n      divider={<Divider orientation=\"vertical\" flexItem />}\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(numSelected > 0 && {\r\n          bgcolor: theme =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity\r\n            )\r\n        })\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography variant=\"h4\" id=\"tableTitle\" component=\"div\">\r\n          Ads\r\n        </Typography>\r\n      )}\r\n      <FormControlLabel\r\n        control={\r\n          <Switch checked={props.dense} onChange={props.onDenseChange} />\r\n        }\r\n        label=\"Dense padding\"\r\n      />\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          {props.waitingDestroy ? (\r\n            <Box>\r\n              <CircularProgress />\r\n            </Box>\r\n          ) : (\r\n            <IconButton onClick={props.onDestroy}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          )}\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton onClick={props.onFilterOn}>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, { value: props.rowsCount, label: 'All' }]}\r\n        component=\"div\"\r\n        count={props.rowsCount}\r\n        rowsPerPage={props.rowsPerPage}\r\n        page={props.page}\r\n        onPageChange={props.onPageChange}\r\n        onRowsPerPageChange={props.onRowsPerPageChange}\r\n      />\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default EnhancedTable\r\n","import React from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Slider from 'react-slick'\r\n\r\n/**\r\n *\r\n * @param {*} props value\r\n * value: array of elements to render.\r\n * @returns\r\n */\r\nconst Carousel = props => {\r\n  const location = useLocation()\r\n  console.log(`Carousel at ${location.pathname}.`)\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  }\r\n\r\n  return (\r\n    <div id=\"slick-slider-wrapper\">\r\n      <Slider {...settings}>\r\n        {props.value.map(\r\n          element =>\r\n            element.photo && (\r\n              <img\r\n                key={element.id}\r\n                src={element.photo}\r\n                alt={element.title}\r\n                width=\"1090px\"\r\n                height=\"400px\"\r\n              />\r\n            )\r\n        )}\r\n      </Slider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Carousel\r\n","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport {\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n  useLocation,\r\n  useParams\r\n} from 'react-router-dom'\r\nimport {\r\n  Button,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  Dialog,\r\n  DialogTitle,\r\n  Snackbar,\r\n  Alert,\r\n  Container,\r\n  CircularProgress\r\n} from '@mui/material'\r\nimport axios from 'axios'\r\nimport { authContext } from '../App'\r\nimport AdForm from '../ReactModels/Ad/AdForm'\r\nimport AdsTable from '../ReactModels/Ad/AdsTable'\r\nimport Carousel from '../Carousel'\r\n\r\nconst GENDERS = [\r\n  'Male',\r\n  'Female',\r\n  'Transgender',\r\n  'Gender neutral',\r\n  'Non-binary',\r\n  'Agender',\r\n  'Pangender',\r\n  'Genderqueer',\r\n  'Two-spirit',\r\n  'Third gender'\r\n]\r\nconst BODY_PARTS = [\r\n  'Torso and Legs',\r\n  'Head',\r\n  'Eyes',\r\n  'Ears',\r\n  'Neck',\r\n  'Torso',\r\n  'hands',\r\n  'Waist',\r\n  'Legs',\r\n  'Feet'\r\n]\r\nconst TYPES = [\r\n  'Sweater',\r\n  'Dress',\r\n  'Hoodies',\r\n  'T-shirt',\r\n  'Flip-flops',\r\n  'Shorts',\r\n  'Pants',\r\n  'Skirt',\r\n  'Jeans',\r\n  'Shoes',\r\n  'Coat',\r\n  'High heels',\r\n  'Suit',\r\n  'Cap',\r\n  'Socks',\r\n  'Shirt',\r\n  'Bra',\r\n  'Scarf',\r\n  'Swimsuit',\r\n  'Hat',\r\n  'Gloves',\r\n  'Jacket',\r\n  'Long coat',\r\n  'Boots',\r\n  'Sunglasses',\r\n  'Tie',\r\n  'Polo shirt',\r\n  'Leather jackets'\r\n]\r\n\r\n/**\r\n * Decides what to render: collection or single (like in routes in server :)\r\n * @description manager of a model (collection and element).\r\n * @returns \\<switch> of collection and element components.\r\n */\r\nconst AdManager = () => {\r\n  //    React router hooks and authentication context value\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  console.log(`AdManager at ${location.pathname}.`)\r\n  const { id } = useParams()\r\n  const { authUser } = useContext(authContext)\r\n\r\n  //    States\r\n  //    Collection\r\n  const initialAds = []\r\n  const [ads, setAds] = useState(initialAds)\r\n  //    Single\r\n  const isEmpty = false // debug.\r\n  const initialAd = {\r\n    id: '',\r\n    photo: '/default.png',\r\n    gender: isEmpty ? '' : 'Male',\r\n    bodyPart: isEmpty ? '' : 'Torso and Legs',\r\n    type: isEmpty ? '' : 'Sweater',\r\n    title: isEmpty ? '' : 'asdf1',\r\n    description: isEmpty ? '' : 'asdf desc1',\r\n    isGiven: false,\r\n    UserId: ''\r\n  }\r\n  const [ad, setAd] = useState(initialAd)\r\n  const initialAdRef = useRef(initialAd)\r\n  // newUserForm Dialog\r\n  const [isAdFormOpen, setAdFormOpen] = useState(false)\r\n  // Feedback related\r\n  const [isSnackbarOpen, setIsSnackbarOpen] = useState(false)\r\n  const [sbAlert, setSbAlert] = useState({ text: '', severity: 'error' }) // sb - snackbar\r\n  // Progress circle.\r\n  const [waiting, setWaiting] = useState(false) // for ads or ad\r\n  const [waitingPhoto, setWaitingPhoto] = useState(false)\r\n  const [waitingPhotoDestroy, setWaitingPhotoDestroy] = useState(false)\r\n  const [waitingSubmit, setWaitingSubmit] = useState(false)\r\n  const [waitingDestroy, setWaitingDestroy] = useState(false)\r\n\r\n  //    Create and update\r\n  // Create - Dialog related and then submit\r\n  const handleAdFormOpen = () => {\r\n    setAdFormOpen(true)\r\n  }\r\n  const handleAdFormClose = () => {\r\n    setAdFormOpen(false)\r\n    console.log('in handleAdFormClose');\r\n    if (ad.photo !== '/default.png') {\r\n      const key = new URL(ad.photo).pathname\r\n      handlePhotoDestroy(key)\r\n    }\r\n    // Changing ad back to what it was (TODO: might save it before overwriting it with new ad).\r\n    if (id)\r\n      if (ads.length)\r\n        // TODO: might want to use only get like bezcoder did (since it's supposed to pass on the retrieval).\r\n        // If ads in memory than we search it.\r\n        setAd(ads[ads.findIndex(ad => id === ad.id.toString())])\r\n      // We get the ad from the server.\r\n      else\r\n        axios\r\n          .get(`/api/ads/${id}`)\r\n          .then(({ data }) => {\r\n            setAd(data)\r\n          })\r\n          .catch(error =>\r\n            handleSnackbarOpen(\r\n              error.response?.statusText || error.message,\r\n              'error'\r\n            )\r\n          )\r\n  }\r\n  // Submit form on create and update.\r\n  const handleSubmit = (path, method) => {\r\n    setWaitingSubmit(true)\r\n    axios({\r\n      method,\r\n      url: path,\r\n      headers: { 'content-type': 'application/json' },\r\n      data: ad\r\n    })\r\n      .then(({ data }) => {\r\n        // Alert that the action was performed successfully.\r\n        const pastTenses = {\r\n          post: 'Created',\r\n          put: 'Updated',\r\n          delete: 'Deleted'\r\n        }\r\n        console.log(`${ad.title} was ${pastTenses[method]}!`)\r\n\r\n        if (method === 'post') {\r\n          setAdFormOpen(false)\r\n          // in AdsTable/Carousel.\r\n          if (!id) setAds(prevAds => prevAds.concat(data))\r\n          handleSnackbarOpen(`Ad ${ad.title} created!`, 'success')\r\n        } else if (method === 'put') {\r\n          // id present anyways.\r\n          handleSnackbarOpen(`Ad ${id} updated!`, 'success')\r\n          // ads in memory.\r\n          if (ads.length !== 0) history.push('/ads')\r\n        }\r\n        setWaitingSubmit(false)\r\n      })\r\n      .catch(error => {\r\n        handleSnackbarOpen(error.response?.statusText || error.message, 'error')\r\n      })\r\n      .finally(() => setAd(initialAd))\r\n  }\r\n  //    Read\r\n  // URL changed.\r\n  useEffect(() => {\r\n    const initialAd = initialAdRef.current\r\n    setWaiting(true)\r\n    // /ads\r\n    if (!id) {\r\n      // Read ads\r\n      axios\r\n        .get('/api/ads')\r\n        .then(({ data }) => {\r\n          setAds(data)\r\n          setWaiting(false)\r\n        })\r\n        .catch(error =>\r\n          handleSnackbarOpen(\r\n            error.response?.statusText || error.message,\r\n            'error'\r\n          )\r\n        )\r\n      setAd(initialAd) // might navigated from a deleted or existing element.\r\n    }\r\n    // /ad\r\n    // Read ad\r\n    else\r\n      axios\r\n        .get(`/api/ads/${id}`)\r\n        .then(({ data }) => {\r\n          setAd(data)\r\n          setWaiting(false)\r\n        })\r\n        .catch(error =>\r\n          handleSnackbarOpen(\r\n            error.response?.statusText || error.message,\r\n            'error'\r\n          )\r\n        )\r\n  }, [id])\r\n  //    Destroy\r\n  const handleDestroy = indices => {\r\n    setWaitingDestroy(true)\r\n    // /ads. indices present.\r\n    if (!id) destroyAds()\r\n    // /ads/:id\r\n    else {\r\n      destroyAd()\r\n      setAd(initialAd)\r\n    }\r\n\r\n    function destroyAds() {\r\n      // TODO: might want to save server requests by sending all ids in action or body.\r\n      Promise.all(\r\n        indices.map(index => axios.delete(`/api/ads/${ads[index].id}`))\r\n      )\r\n        .then(() => {\r\n          // Deleting selected ads from ads.\r\n          setAds(prevAds => {\r\n            indices.sort() // Must sort because we're using pop.\r\n            while (indices.length) {\r\n              prevAds.splice(indices.pop(), 1)\r\n            }\r\n            return prevAds.slice()\r\n          })\r\n          handleSnackbarOpen('Ad(s) destroyed!', 'success')\r\n          setWaitingDestroy(false)\r\n        })\r\n        .catch(error =>\r\n          handleSnackbarOpen(\r\n            error.response?.statusText || error.message,\r\n            'error'\r\n          )\r\n        )\r\n    }\r\n\r\n    function destroyAd() {\r\n      axios\r\n        .delete(`/api/ads/${id}`)\r\n        .then(() => {\r\n          setWaitingDestroy(false)\r\n          // ads in memory\r\n          if (ads.length) history.replace('/ads')\r\n          handleSnackbarOpen('Ad destroyed!', 'success')\r\n        })\r\n        .catch(error =>\r\n          handleSnackbarOpen(\r\n            error.response?.statusText || error.message,\r\n            'error'\r\n          )\r\n        )\r\n    }\r\n  }\r\n\r\n  //    Standard form change handler\r\n  const handleChange = (name, value) => {\r\n    setAd(prevAd => ({ ...prevAd, [name]: value }))\r\n    // TODO: how can I change the collection simoultaniously?.\r\n  }\r\n  //    Photo change and destroy handlers\r\n  const handlePhotoChange = async file => {\r\n    setWaitingPhoto(true)\r\n    try {\r\n      // Get the signed URL to upload the photo to.\r\n      const response = await axios.post('/api/adsPhotos', {\r\n        params: { 'file-name': file.name, 'file-type': file.type }\r\n      })\r\n      // Upload the photo to the signed URL.\r\n      await axios.put(response.data.signedURL, file)\r\n      // Change the, now hidden, photo field programmatically.\r\n      setAd(prevAd => ({ ...prevAd, photo: response.data.photo }))\r\n      setWaitingPhoto(false)\r\n    } catch (error) {\r\n      console.log('Fetch of signed request or PUTing the photo failed!', error)\r\n    }\r\n  }\r\n  const handlePhotoDestroy = async key => {\r\n    setWaitingPhotoDestroy(true)\r\n    // extract photo key (name) from photo URL and destroy it.\r\n    try {\r\n      await axios.delete(`/api/adsPhotos/${key}`)\r\n      setAd(prevAd => ({ ...prevAd, photo: '/default.png' }))\r\n      setWaitingPhotoDestroy(false)\r\n    } catch (error) {\r\n      // TODO: need to extract to manager parent because snackbar needed.\r\n      alert(\r\n        'Destruction of photo unsuccessfull! Go to aws console and delete the photo yourself.'\r\n      )\r\n    }\r\n  }\r\n\r\n  //    Feedback\r\n  function handleSnackbarOpen(text, severity) {\r\n    setIsSnackbarOpen(true)\r\n    setSbAlert({ text, severity })\r\n    console.log(`${severity}: ${text}`)\r\n  }\r\n  function handleSnackbarClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return\r\n    }\r\n    setIsSnackbarOpen(false)\r\n  }\r\n\r\n  // Helpers\r\n  const handleGenerate = () => {\r\n    const gender = GENDERS[Math.floor(Math.random() * GENDERS.length)]\r\n    const bodyPart = BODY_PARTS[Math.floor(Math.random() * BODY_PARTS.length)]\r\n    const type = TYPES[Math.floor(Math.random() * TYPES.length)]\r\n    const title = ad.title.slice(0, -1) + (+ad.title.slice(-1) + 1)\r\n    const description =\r\n      ad.description.slice(0, -1) + (+ad.description.slice(-1) + 1)\r\n    setAd({ ...ad, gender, bodyPart, type, title, description })\r\n  }\r\n  // upated/deleted from an independant page.\r\n  if (sbAlert.text.includes('delete')) return <div>{sbAlert.text}</div>\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/ads\">\r\n          {waiting ? (\r\n            <Container sx={{ width: '150px', paddingTop: '100px' }}>\r\n              <CircularProgress size={100} />\r\n            </Container>\r\n          ) : (\r\n            <AdsTable\r\n              initialElement={initialAd}\r\n              rows={ads}\r\n              onDestroy={handleDestroy}\r\n              onPhotoDestroy={handlePhotoDestroy}\r\n              waitingDestroy={waitingDestroy}\r\n            />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/ads/:id\">\r\n          {waiting ? (\r\n            <Container sx={{ width: '150px', paddingTop: '100px' }}>\r\n              <CircularProgress size={100} />\r\n            </Container>\r\n          ) : (\r\n            <AdForm\r\n              name=\"existing\"\r\n              ad={ad}\r\n              onSubmit={handleSubmit}\r\n              onChange={handleChange}\r\n              onDestroy={handleDestroy}\r\n              onPhotoChange={handlePhotoChange}\r\n              onPhotoDestroy={handlePhotoDestroy}\r\n              waitingPhoto={waitingPhoto}\r\n              waitingPhotoDestroy={waitingPhotoDestroy}\r\n              waitingSubmit={waitingSubmit}\r\n              waitingDestroy={waitingDestroy}\r\n            />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/adsCarousel\">\r\n          <Carousel value={ads} />\r\n        </Route>\r\n      </Switch>\r\n      {/* Create button */}\r\n      {authUser && (\r\n        <Button variant=\"contained\" onClick={handleAdFormOpen}>\r\n          Create a New ad\r\n        </Button>\r\n      )}\r\n      {/* Create dialog form */}\r\n      <Dialog\r\n        open={isAdFormOpen}\r\n        onClose={handleAdFormClose}\r\n        scroll=\"body\"\r\n        PaperProps={{ sx: { padding: '0px 10px 10px' } }}\r\n      >\r\n        <DialogTitle sx={{ fontSize: '1rem', padding: '8px 24px' }}>\r\n          Create a new Ad\r\n          <Button variant=\"outlined\" size=\"small\" onClick={handleGenerate}>\r\n            Generate random fields!\r\n          </Button>\r\n        </DialogTitle>\r\n        <AdForm\r\n          name=\"new\"\r\n          ad={ad}\r\n          onSubmit={handleSubmit}\r\n          onChange={handleChange}\r\n          onPhotoChange={handlePhotoChange}\r\n          onPhotoDestroy={handlePhotoDestroy}\r\n          waitingPhoto={waitingPhoto}\r\n          waitingPhotoDestroy={waitingPhotoDestroy}\r\n          waitingSubmit={waitingSubmit}\r\n        />\r\n      </Dialog>\r\n      {/* Feedback snackbar */}\r\n      <Snackbar\r\n        open={isSnackbarOpen}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <Alert\r\n          onClose={handleSnackbarClose}\r\n          severity={sbAlert.severity}\r\n          variant=\"filled\"\r\n        >\r\n          {sbAlert.text}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdManager\r\n\r\nexport const AdSwitch = () => {\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n\r\n  // Radio Group\r\n  const [selectedPage, setSelectedPage] = useState('')\r\n\r\n  // Switch between table and carousel.\r\n  const handlePageChange = event => {\r\n    const selectedPage = event.target.value\r\n    // replace if table or carousel, else push.\r\n    if (location.pathname === '/ads' || location.pathname === '/adsCarousel')\r\n      history.replace(selectedPage)\r\n    else history.push(selectedPage)\r\n  }\r\n  // On navigation, change selected radio.\r\n  useEffect(() => {\r\n    setSelectedPage(location.pathname)\r\n  }, [location.pathname])\r\n\r\n  return (\r\n    <div>\r\n      <RadioGroup\r\n        name=\"ads-page-switcher\"\r\n        value={selectedPage} // from path.\r\n        onChange={handlePageChange}\r\n        row\r\n      >\r\n        <FormControlLabel value=\"/ads\" control={<Radio />} label=\"Table\" />\r\n        <FormControlLabel\r\n          value=\"/adsCarousel\"\r\n          control={<Radio />}\r\n          label=\"Carousel\"\r\n        />\r\n      </RadioGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\n//    TODOs\r\n// * think about merging to one component with 'value' prop that will be a single element or a collection according to whether the use is loggeding.\r\n// * when presenting the ads, then login and then again getting the ads instead of saving them in memory, think about a way to access them globally (maybe redux?).\r\n// * when updating an ad and then navigating through the radio buttun to table, and than to the ad, it doesn't update on client.\r\n// A comment for github\r\n","import _ from 'lodash'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { alpha } from '@mui/material/styles'\r\nimport { Box, Stack, Divider, Paper } from '@mui/material'\r\nimport {\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableSortLabel,\r\n  TextField\r\n} from '@mui/material'\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button\r\n} from '@mui/material'\r\nimport Typography from '@mui/material/Typography'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport { FormControlLabel, Switch } from '@mui/material'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport FilterListIcon from '@mui/icons-material/FilterList'\r\nimport { visuallyHidden } from '@mui/utils'\r\n\r\n/**\r\n *\r\n * @param {*} props headers, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort.\r\n * as array of objects of structure [{id: string, isAlignRight: boolean, disablePadding: boolean, label: string},...]\r\n * @returns \\<div> (probably) as MUI TableHead.\r\n */\r\nconst EnhancedTableHead = props => {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort\r\n  } = props\r\n\r\n  const createSortHandler = header => event => {\r\n    onRequestSort(event, header)\r\n  }\r\n\r\n  const handleChange = event => {\r\n    const target = event.target\r\n    const name = target.name\r\n    const value = target.value\r\n    props.onChange(name, value)\r\n  }\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'select all users'\r\n            }}\r\n          />\r\n        </TableCell>\r\n        {props.headers.map(header => (\r\n          <TableCell\r\n            key={header.id}\r\n            align={header.isAlignRight ? 'right' : 'left'}\r\n            padding={header.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === header.id ? order : false}\r\n          >\r\n            {!props.filterOn ? (\r\n              <TableSortLabel\r\n                active={orderBy === header.id}\r\n                direction={orderBy === header.id ? order : 'asc'}\r\n                onClick={createSortHandler(header.id)}\r\n              >\r\n                <b>\r\n                  {_.startCase(\r\n                    header.label === 'photo' ? 'photo' : header.label\r\n                  )}\r\n                </b>\r\n                {orderBy === header.id ? (\r\n                  <Box component=\"span\" sx={visuallyHidden}>\r\n                    {order === 'asc' ? 'sorted ascending' : 'sorted descending'}\r\n                  </Box>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            ) : (\r\n              <TextField\r\n                id={header.id}\r\n                name={header.id}\r\n                value={props.rowFilter[header.id]}\r\n                onChange={handleChange}\r\n                label={header.label}\r\n                size=\"small\"\r\n              />\r\n            )}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  )\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n}\r\n\r\n/**\r\n *  Table with paging, sorting and filtering.\r\n * @param {*} props initialElement, rows, onDestroy.\r\n * @returns \\<div> (probably) as MUI TableContainer with \"edit item\" and \"destroy\" user actions.\r\n */\r\nconst EnhancedTable = props => {\r\n  //    React router hooks\r\n  const location = useLocation()\r\n  console.log(`UsersTable at ${location.pathname}.`)\r\n\r\n  //    Enhanced table related\r\n  const [selectedIndices, setSelectedIndices] = useState([])\r\n  const [page, setPage] = useState(0)\r\n  const [dense, setDense] = useState(false)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  const headers = []\r\n  Object.entries(props.initialElement).forEach(([key, value], index) => {\r\n    headers.push({\r\n      id: key,\r\n      isAlignRight: typeof value !== 'string' && key !== 'id' ? true : false,\r\n      disablePadding: index === 0 ? true : false,\r\n      label: key\r\n    })\r\n  })\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - props.rows.length) : 0\r\n\r\n  const handleSelectAllClick = event => {\r\n    let newSelectedIndices = []\r\n    if (event.target.checked)\r\n      newSelectedIndices = props.rows.map((row, index) => index)\r\n    setSelectedIndices(newSelectedIndices)\r\n  }\r\n  const handleRowClick = (event, index) => {\r\n    let newSelectedIndices = [...selectedIndices]\r\n    // add the checked index\r\n    if (!newSelectedIndices.includes(index)) {\r\n      newSelectedIndices.push(index)\r\n    }\r\n    // delete the present index\r\n    else newSelectedIndices.splice(newSelectedIndices.indexOf(index), 1)\r\n    setSelectedIndices(newSelectedIndices)\r\n  }\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10))\r\n    setPage(0)\r\n  }\r\n  const handleDenseChange = event => {\r\n    setDense(event.target.checked)\r\n  }\r\n\r\n  //    Sorting related\r\n  const [order, setOrder] = useState('asc')\r\n  const [orderBy, setOrderBy] = useState('calories')\r\n\r\n  // Helper for sort.\r\n  const getComparator = (order, orderBy) => {\r\n    const ascendingComparator = (r1, r2, orderBy) => {\r\n      if (r1[orderBy] < r2[orderBy]) {\r\n        return -1\r\n      }\r\n      if (r1[orderBy] > r2[orderBy]) {\r\n        return 1\r\n      }\r\n      return 0\r\n    }\r\n\r\n    return order === 'asc'\r\n      ? (r1, r2) => ascendingComparator(r1, r2, orderBy)\r\n      : (r1, r2) => -ascendingComparator(r1, r2, orderBy)\r\n  }\r\n  const handleRequestSort = (event, header) => {\r\n    setOrderBy(header)\r\n    // flip order if the user clicked on the current orderBy header\r\n    const isAsc = orderBy === header && order === 'asc'\r\n    setOrder(isAsc ? 'desc' : 'asc')\r\n  }\r\n\r\n  // Filter relate\r\n  const [filterOn, setFilterOn] = useState(false)\r\n  const [filteredRows, setFilteredRows] = useState([])\r\n  const [rowFilter, setRowFilter] = useState(\r\n    Object.fromEntries(headers.map(header => [header.id, '']))\r\n  )\r\n\r\n  const handleFilterOn = () => {\r\n    setFilterOn(filterOn => !filterOn)\r\n    setFilteredRows(props.rows)\r\n  }\r\n  const handleChange = (name, value) => {\r\n    setRowFilter(rowFilter => ({ ...rowFilter, [name]: value }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // TODO: might want to act on filtered rows when adding chars and on props.rows when deleting them (or use a memento pattern).\r\n    const newFilteredRows = props.rows.filter(row =>\r\n      // TODO: try without return.\r\n      Object.keys(rowFilter).every(rfkey => {\r\n        let value = row[rfkey]\r\n        if (typeof value === 'number') value = value.toString()\r\n        else if (typeof value === 'boolean') value = value ? 'Yes' : 'No'\r\n        return value.includes(rowFilter[rfkey])\r\n      })\r\n    )\r\n    setFilteredRows(newFilteredRows)\r\n  }, [props, rowFilter])\r\n\r\n  // Warning before destroying a user.\r\n  const [isDestroyWarningOpen, setIsDestroyWarningOpen] = useState(false)\r\n\r\n  const handleDestroyWarningOpen = () => {\r\n    setIsDestroyWarningOpen(true)\r\n  }\r\n  const handleDestroyWarningClose = () => {\r\n    setIsDestroyWarningOpen(false)\r\n  }\r\n  const handleDestroy = () => {\r\n    setIsDestroyWarningOpen(false)\r\n    props.onDestroy(selectedIndices)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%' }}>\r\n        <Paper sx={{ width: '100%', mb: 2 }}>\r\n          <TableContainer sx={{ height: '350px', overflow: 'scroll' }}>\r\n            <Table\r\n              sx={{ minWidth: 750 }}\r\n              aria-labelledby=\"Users Table\"\r\n              size={dense ? 'small' : 'medium'}\r\n              stickyHeader\r\n              aria-label=\"sticky table\"\r\n            >\r\n              <EnhancedTableHead\r\n                headers={headers}\r\n                numSelected={selectedIndices.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={props.rows.length}\r\n                filterOn={filterOn}\r\n                onChange={handleChange}\r\n                rowFilter={rowFilter}\r\n              />\r\n              <TableBody>\r\n                {(filterOn ? filteredRows : props.rows)\r\n                  .slice()\r\n                  .sort(getComparator(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const isItemSelected = selectedIndices.includes(index)\r\n                    const checkboxLabelId = `enhanced-table-checkbox-${index}`\r\n\r\n                    return (\r\n                      <TableRow\r\n                        key={row.id}\r\n                        hover\r\n                        onClick={event => handleRowClick(event, index)}\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            color=\"primary\"\r\n                            checked={isItemSelected}\r\n                            inputProps={{\r\n                              'aria-labelledby': checkboxLabelId\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell padding=\"none\">\r\n                          <Link\r\n                            underline=\"hover\"\r\n                            component={RouterLink}\r\n                            to={`/users/${row.id}`}\r\n                          >\r\n                            {row.id}\r\n                          </Link>\r\n                        </TableCell>\r\n                        {Object.keys(\r\n                          // Specific to user.\r\n                          _.omit(row, ['id', 'createdAt', 'updatedAt'])\r\n                        ).map(key => {\r\n                          let cellValue = row[key]\r\n\r\n                          if (typeof row[key] === 'boolean')\r\n                            cellValue = row[key] ? 'Yes' : 'No'\r\n                          else if (key === 'photo')\r\n                            cellValue = row.photo && (\r\n                              <img\r\n                                src={row.photo}\r\n                                alt={`${row.title}`}\r\n                                width=\"100px\"\r\n                                height=\"100px\"\r\n                              />\r\n                            )\r\n\r\n                          return (\r\n                            <TableCell\r\n                              key={`${row.id}-${row[key]}`}\r\n                              {...(key === 'name'\r\n                                ? {\r\n                                    component: 'th',\r\n                                    id: checkboxLabelId,\r\n                                    scope: 'row'\r\n                                  }\r\n                                : {\r\n                                    align:\r\n                                      typeof row[key] !== 'string'\r\n                                        ? 'right'\r\n                                        : 'left'\r\n                                  })}\r\n                            >\r\n                              {cellValue}\r\n                            </TableCell>\r\n                          )\r\n                        })}\r\n                      </TableRow>\r\n                    )\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow\r\n                    style={{\r\n                      height: (dense ? 33 : 53) * emptyRows\r\n                    }}\r\n                  >\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <EnhancedTableToolbar\r\n            numSelected={selectedIndices.length}\r\n            selectedIndices={selectedIndices}\r\n            onDestroy={handleDestroyWarningOpen}\r\n            dense={dense}\r\n            onDenseChange={handleDenseChange}\r\n            rows={props.rows}\r\n            rowsPerPage={rowsPerPage}\r\n            onRowsPerPageChange={handleRowsPerPageChange}\r\n            page={page}\r\n            onPageChange={handlePageChange}\r\n            onFilterOn={handleFilterOn}\r\n          />\r\n        </Paper>\r\n      </Box>\r\n      <Dialog\r\n        open={isDestroyWarningOpen}\r\n        onClose={handleDestroyWarningClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          Destroy the user (and his ads)?\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            If you destroy this user, you will also destroy all of his ads, so\r\n            be careful!\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDestroyWarningClose}>Disagree</Button>\r\n          <Button color=\"warning\" onClick={handleDestroy} autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\n/**\r\n *  Extracted for ease of read of the EnhancedTable component.\r\n * @param {*} props numSelected, selectedIndices, onDestroy\r\n * @returns\r\n */\r\nfunction EnhancedTableToolbar(props) {\r\n  const { numSelected } = props\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      justifyContent=\"space-between\"\r\n      divider={<Divider orientation=\"vertical\" flexItem />}\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(numSelected > 0 && {\r\n          bgcolor: theme =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity\r\n            )\r\n        })\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography variant=\"h4\" id=\"tableTitle\" component=\"div\">\r\n          Users\r\n        </Typography>\r\n      )}\r\n      <FormControlLabel\r\n        control={\r\n          <Switch checked={props.dense} onChange={props.onDenseChange} />\r\n        }\r\n        label=\"Dense padding\"\r\n      />\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton onClick={props.onDestroy}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton onClick={props.onFilterOn}>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, { value: props.rows.length, label: 'All' }]}\r\n        component=\"div\"\r\n        count={props.rows.length}\r\n        rowsPerPage={props.rowsPerPage}\r\n        page={props.page}\r\n        onPageChange={props.onPageChange}\r\n        onRowsPerPageChange={props.onRowsPerPageChange}\r\n      />\r\n    </Stack>\r\n  )\r\n}\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired\r\n}\r\n\r\nexport default EnhancedTable\r\n","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport {\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n  useLocation,\r\n  useParams\r\n} from 'react-router-dom'\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  Snackbar,\r\n  Alert,\r\n  Container,\r\n  CircularProgress\r\n} from '@mui/material'\r\nimport { authContext } from '../App'\r\nimport axios from 'axios'\r\nimport UserForm from '../ReactModels/User/UserForm'\r\nimport UsersTable from '../ReactModels/User/UsersTable'\r\n\r\n/**\r\n * Decides what to render: collection or single (like in routes in server :)\r\n * @description manager of a model (collection and element).\r\n * @returns \\<switch> of collection and element components.\r\n */\r\nconst UserManager = () => {\r\n  //    React router hooks and authentication context value\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  console.log(`UserManager at ${location.pathname}.`)\r\n  const { id } = useParams()\r\n  const auth = useContext(authContext)\r\n\r\n  //    States\r\n  // Collection\r\n  const initialUsers = []\r\n  const [users, setUsers] = useState(initialUsers)\r\n  // Single\r\n  const isEmpty = false // debug\r\n  const initialUser = {\r\n    id: '',\r\n    email: isEmpty ? '' : `shalevku@gmail.com`,\r\n    password: isEmpty ? '' : 'asdf',\r\n    name: isEmpty ? '' : `Shalev Kubi`\r\n  }\r\n  const [user, setUser] = useState(initialUser)\r\n  const initialUserRef = useRef(initialUser)\r\n  // newUserForm Dialog\r\n  const [isUserFormOpen, setUserFormOpen] = useState(false)\r\n  // Feedback related\r\n  const [isSnackbarOpen, setIsSnackbarOpen] = useState(false)\r\n  const [sbAlert, setSbAlert] = useState({ text: '', severity: 'error' })\r\n  const [waiting, setWaiting] = useState(false) // for ads or ad\r\n\r\n  //    Create and update\r\n  // Create\r\n  const handleUserFormOpen = () => {\r\n    setUserFormOpen(true)\r\n  }\r\n  const handleUserFormClose = () => {\r\n    setUserFormOpen(false)\r\n    if (id)\r\n      if (users.length)\r\n        setUser(users[users.findIndex(user => id === user.id.toString())])\r\n      else readUser() // Maybe save the previous user somehow (because it is known that there might be canceling of the dialog).\r\n\r\n    function readUser() {\r\n      axios\r\n        .get(`/api/users/${id}`)\r\n        .then(({ data }) => {\r\n          setUser(data)\r\n        })\r\n        .catch(error =>\r\n          handleSnackbarOpen(\r\n            error.response?.statusText || error.message,\r\n            'error'\r\n          )\r\n        )\r\n    }\r\n  }\r\n  // Submit form on create and update.\r\n  const handleSubmit = (path, method) => {\r\n    axios({\r\n      method,\r\n      url: path,\r\n      headers: { 'content-type': 'application/json' },\r\n      data: user\r\n    })\r\n      .then(({ data }) => {\r\n        // Alert that the action was performed successfully.\r\n        const pastTenses = {\r\n          post: 'Created',\r\n          put: 'Updated',\r\n          delete: 'Deleted'\r\n        }\r\n        console.log(`${user.name} was ${pastTenses[method]}!`)\r\n\r\n        // action is /api/users for sure.\r\n        if (method === 'post') {\r\n          setUserFormOpen(false)\r\n          // in UsersTable/Carousel.\r\n          if (!id) setUsers(prevUsers => prevUsers.concat(data))\r\n          handleSnackbarOpen(`User ${user.name} created!`, 'success')\r\n        } else if (method === 'put') {\r\n          // id present anyways.\r\n          // users in memory.\r\n          if (users.length !== 0) {\r\n            handleSnackbarOpen(\r\n              `User ${id} updated! Redirecting in 6 seconds to table...`,\r\n              'success'\r\n            )\r\n            setTimeout(() => {\r\n              history.push('/users')\r\n            }, 6000)\r\n          } else handleSnackbarOpen(`User ${id} updated!`, 'success')\r\n        }\r\n      })\r\n      .catch(error =>\r\n        handleSnackbarOpen(error.response?.statusText || error.message, 'error')\r\n      )\r\n  }\r\n  //    Read\r\n  // URL changed.\r\n  useEffect(() => {\r\n    const initialUser = initialUserRef.current\r\n    setWaiting(true)\r\n    // /users\r\n    if (!id) {\r\n      // Read users\r\n      axios\r\n        .get('/api/users')\r\n        .then(({ data }) => {\r\n          setUsers(data)\r\n          setWaiting(false)\r\n        })\r\n        .catch(error =>\r\n          handleSnackbarOpen(\r\n            error.response?.statusText || error.message,\r\n            'error'\r\n          )\r\n        )\r\n      setUser(initialUser) // navigated from a deleted element.\r\n    }\r\n    // /user/:id\r\n    // Read users.\r\n    else\r\n      axios\r\n        .get(`/api/users/${id}`)\r\n        .then(({ data }) => {\r\n          setUser(data)\r\n          setWaiting(false)\r\n        })\r\n        .catch(error =>\r\n          handleSnackbarOpen(\r\n            error.response?.statusText || error.message,\r\n            'error'\r\n          )\r\n        )\r\n  }, [id])\r\n  //    Destroy\r\n  const handleDestroy = selectedIndices => {\r\n    // /users. selectedIndices present.\r\n    if (!id) {\r\n      destroyUsers()\r\n      // logout the user if he deleted himself\r\n      const authUserIndex = users.findIndex(\r\n        user => auth.authUser.id === user.id\r\n      )\r\n      if (selectedIndices.includes(authUserIndex)) console.log('in if')\r\n      setTimeout(() => {\r\n        console.log('about to logout')\r\n        auth.logout()\r\n      }, 3000)\r\n    }\r\n    // /user/:id\r\n    else {\r\n      destroyUser()\r\n      setUser(initialUser)\r\n      if (id === auth.authUser.id) auth.logout()\r\n    }\r\n\r\n    function destroyUsers() {\r\n      while (selectedIndices.length) {\r\n        const index = selectedIndices.pop()\r\n\r\n        axios\r\n          .delete(`/api/users/${users[index].id}`)\r\n          .then(() => {\r\n            setUsers(prevUsers => {\r\n              prevUsers.splice(index, 1)\r\n              return prevUsers.slice()\r\n            })\r\n            handleSnackbarOpen('User(s) destroyed!', 'success')\r\n          })\r\n          .catch(error =>\r\n            handleSnackbarOpen(\r\n              error.response?.statusText || error.message,\r\n              'error'\r\n            )\r\n          )\r\n      }\r\n    }\r\n\r\n    function destroyUser() {\r\n      axios\r\n        .delete(`/api/users/${id}`)\r\n        .then(() => {\r\n          // form is directly navigated.\r\n          if (!users.length) {\r\n            setUser(initialUser)\r\n            handleSnackbarOpen({\r\n              text: `User ${id} deleted!`,\r\n              severity: 'success'\r\n            })\r\n          } else history.replace('/users')\r\n\r\n          handleSnackbarOpen('User destroyed!', 'success')\r\n        })\r\n        .catch(error =>\r\n          handleSnackbarOpen(\r\n            error.response?.statusText || error.message,\r\n            'error'\r\n          )\r\n        )\r\n    }\r\n  }\r\n\r\n  //    Standard form change handler\r\n  const handleChange = (name, value) => {\r\n    setUser(prevUser => ({ ...prevUser, [name]: value }))\r\n  }\r\n\r\n  //    Feedback\r\n  function handleSnackbarOpen(text, severity) {\r\n    setIsSnackbarOpen(true)\r\n    setSbAlert({ text, severity })\r\n    console.log(`${severity}: ${text}`)\r\n  }\r\n  function handleSnackbarClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return\r\n    }\r\n    setIsSnackbarOpen(false)\r\n  }\r\n\r\n  // upated/deleted from an independant page.\r\n  if (sbAlert.text.includes('delete')) return <div>{sbAlert.text}</div>\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/users\">\r\n          {waiting ? (\r\n            <Container sx={{ width: '150px', paddingTop: '100px' }}>\r\n              <CircularProgress size={100} />\r\n            </Container>\r\n          ) : (\r\n            <UsersTable\r\n              initialElement={initialUser}\r\n              rows={users}\r\n              onDestroy={handleDestroy}\r\n            />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/users/:id\">\r\n          {waiting ? (\r\n            <Container sx={{ width: '150px', paddingTop: '100px' }}>\r\n              <CircularProgress size={100} />\r\n            </Container>\r\n          ) : (\r\n            <UserForm\r\n              name=\"existing\"\r\n              user={user}\r\n              onSubmit={handleSubmit}\r\n              onChange={handleChange}\r\n              onDestroy={handleDestroy}\r\n            />\r\n          )}\r\n        </Route>\r\n      </Switch>\r\n      {/* Create button */}\r\n      {auth.authUser && (\r\n        <Button variant=\"contained\" onClick={handleUserFormOpen}>\r\n          Create a New user\r\n        </Button>\r\n      )}\r\n      {/* Create dialog form */}\r\n      <Dialog\r\n        open={isUserFormOpen}\r\n        onClose={handleUserFormClose}\r\n        scroll=\"body\"\r\n        PaperProps={{ sx: { padding: '0px 10px 10px' } }}\r\n      >\r\n        <DialogTitle sx={{ fontSize: '1rem', padding: '8px 24px' }}>\r\n          Create a new user\r\n        </DialogTitle>\r\n        <UserForm\r\n          name=\"new\"\r\n          user={user}\r\n          onSubmit={handleSubmit}\r\n          onChange={handleChange}\r\n        />\r\n      </Dialog>\r\n      {/* Feedback snackbar */}\r\n      <Snackbar\r\n        open={isSnackbarOpen}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <Alert\r\n          onClose={handleSnackbarClose}\r\n          severity={sbAlert.severity}\r\n          variant=\"filled\"\r\n        >\r\n          {sbAlert.text}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserManager\r\n","// Remark: auth stands for authentication.\nimport React, { useState, useContext } from 'react'\nimport {\n  Switch,\n  Route,\n  Redirect,\n  Link as RouterLink,\n  useHistory,\n  useLocation\n} from 'react-router-dom'\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Link,\n  Button,\n  // IconButton\n} from '@mui/material'\n// import MenuIcon from '@mui/icons-material/Menu'\nimport axios from 'axios'\nimport UserSessionManager, { UserAuthSwitch } from './Managers/UserSession'\nimport AdManager, { AdSwitch } from './Managers/Ad.manager'\nimport UserManager from './Managers/User.manager'\n\nconst authContext = React.createContext()\nconst AD_MANAGER_URLs = ['/ads/:id', '/ads', '/adsCarousel']\nconst USER_MANAGER_URLs = ['/users/:id', '/users']\n\nconst App = () => {\n  //    React router hooks and authentication context value\n  const history = useHistory()\n  const location = useLocation()\n  console.log(`App at ${location.pathname}.`)\n  const [authUser, setAuthUser] = useState(null)\n\n  const login = authUser => {\n    setAuthUser(authUser)\n    const { from } = location.state || { from: { pathname: '/' } }\n    history.replace(from)\n  }\n\n  const logout = async () => {\n    await axios.delete('/api/userSession')\n    setAuthUser(null)\n  }\n\n  const auth = { authUser, login, logout }\n\n  return (\n    <authContext.Provider value={auth}>\n      <>\n        <Box sx={{ flexGrow: 1 }}>\n          <AppBar position=\"static\" color=\"inherit\" sx={{ mb: '3px' }}>\n            <Toolbar>\n              {/* hamburger menu */}\n              {/* <IconButton\n                size=\"large\"\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"menu\"\n                sx={{ mr: 2 }}\n              >\n                <MenuIcon />\n              </IconButton> */}\n              {/* Homepage link */}\n              <Typography\n                variant=\"h1\"\n                component=\"h1\"\n                fontSize=\"16px\"\n                sx={{ flexGrow: 1 }}\n              >\n                <Link\n                  underline=\"hover\"\n                  component={RouterLink}\n                  to=\"/\"\n                  title=\"Back to the homepage.\"\n                >\n                  Clothes Donation\n                </Link>\n              </Typography>\n              {/* Manager heading */}\n              <Switch>\n                <Route path={USER_MANAGER_URLs}>\n                  {/* Users heading (or link) to manage users */}\n                  <Typography\n                    variant=\"h2\"\n                    component=\"h2\"\n                    fontSize=\"14px\"\n                    sx={{ flexGrow: 1 }}\n                  >\n                    Manage Users\n                  </Typography>\n                </Route>\n                <Route path={['/login', '/createAccount']}>\n                  <Typography\n                    variant=\"h2\"\n                    component=\"h2\"\n                    fontSize=\"14px\"\n                    sx={{ flexGrow: 1 }}\n                  >\n                    User Session!\n                  </Typography>\n                  <UserAuthSwitch />\n                </Route>\n                <Route path={AD_MANAGER_URLs}>\n                  <Typography\n                    variant=\"h2\"\n                    component=\"h2\"\n                    fontSize=\"14px\"\n                    sx={{ flexGrow: 1 }}\n                  >\n                    Ads Manager!\n                  </Typography>\n                </Route>\n              </Switch>\n              <Route path={AD_MANAGER_URLs}>\n                <AdSwitch />\n              </Route>\n              {location.pathname !== '/users' && (\n                <Link component={RouterLink} to=\"/users\">\n                  Users\n                </Link>\n              )}\n              &nbsp;&nbsp;\n              {/* Logout and login controls. */}\n              {auth.authUser ? (\n                <Button\n                  variant=\"outlined\"\n                  color=\"warning\"\n                  onClick={logout}\n                  title=\"Logout from your account\"\n                  sx={{ mr: 2 }}\n                >\n                  Logout {auth.authUser.name}\n                </Button>\n              ) : (\n                !/login|createAccount/.test(location.pathname) && (\n                  <Link\n                    underline=\"hover\"\n                    component={RouterLink}\n                    to={{\n                      pathname: '/login',\n                      state: { from: location }\n                    }}\n                    title=\"Manage your ads.\"\n                    sx={{ mr: 2 }}\n                  >\n                    Login\n                  </Link>\n                )\n              )}\n            </Toolbar>\n          </AppBar>\n        </Box>\n        <Switch>\n          {/* Maybe instead of a redirect I'll do a main menu. */}\n          <Redirect exact path=\"/\" to=\"/ads\" />\n          <Route path={AD_MANAGER_URLs}>\n            <AdManager />\n          </Route>\n          <PrivateRoute path={USER_MANAGER_URLs}>\n            <UserManager />\n          </PrivateRoute>\n          <Route path={['/login', '/createAccount']}>\n            <UserSessionManager />\n          </Route>\n        </Switch>\n      </>\n    </authContext.Provider>\n  )\n}\n// A wrapper that redirects unauthenticated users.\nconst PrivateRoute = props => {\n  const { authUser } = useContext(authContext)\n  const location = useLocation()\n  console.log(`PrivateRoute: location: ${location.pathname}`)\n\n  return (\n    <Route path={props.path}>\n      {authUser\n        ? props.children\n        : !console.log('please login first!') && (\n            <Redirect\n              to={{\n                pathname: '/login',\n                state: { from: location }\n              }}\n            />\n          )}\n    </Route>\n  )\n}\nexport { authContext }\nexport default App\n\n// * try with default value for context (without provider).\n// * take care of when server send errors.\n\n// Remarks:\n// I chose to unite <model> forms into one because of the efficiency of rendering the same controls and state\n// that can be the same between them such as between login and new user.\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport '@fortawesome/fontawesome-free/js/all.js'\nimport 'slick-carousel/slick/slick.css'\nimport 'slick-carousel/slick/slick-theme.css'\nimport './index.css'\nimport App from './App'\n// import reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n\n// credits:\n// from https://reactrouter.com/web/example/auth-workflow (and https://usehooks.com/useAuth/)\n"],"sourceRoot":""}